import { PostEmptyEventName, PostEventParams, PostNonEmptyEventName } from './types';
interface PostEventOptions {
    /**
     * Origin used while posting message. This option is only used in case,
     * current environment is browser (Web version of Telegram) and could
     * be used for test purposes.
     * @default 'https://web.telegram.org'
     */
    targetOrigin?: string;
}
/**
 * Sends event to native application which launched Web App. This function
 * accepts only events, which require arguments.
 * @param event - event name.
 * @param params - event parameters.
 * @param options - posting options.
 * @throws {Error} Bridge could not determine current
 * environment and possible way to send event.
 */
export declare function postEvent<E extends PostNonEmptyEventName>(event: E, params: PostEventParams<E>, options?: PostEventOptions): void;
/**
 * Sends event to native application which launched Web App. This function
 * accepts only events, which require arguments.
 * @param event - event name.
 * @param options - posting options.
 * @throws {Error} Bridge could not determine current
 * environment and possible way to send event.
 */
export declare function postEvent(event: PostEmptyEventName, options?: PostEventOptions): void;
export {};
