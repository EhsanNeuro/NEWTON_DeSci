import { ImpactHapticFeedbackStyle, NotificationHapticFeedbackType } from 'twa-bridge';
import { Version } from 'twa-core';
import { SupportsFunc } from '../../utils';
import { BridgeLike } from '../../types';
/**
 * Class which controls haptic feedback. It allows calling different types of
 * haptic notifications which usually occur after user interaction with
 * application.
 */
export declare class HapticFeedback {
    private readonly bridge;
    constructor(bridge: BridgeLike, version: Version);
    /**
     * A method tells that an impact occurred. The Telegram app may play the
     * appropriate haptics based on style value passed.
     * @param style - impact style.
     */
    impactOccurred(style: ImpactHapticFeedbackStyle): void;
    /**
     * A method tells that a task or action has succeeded, failed, or produced
     * a warning. The Telegram app may play the appropriate haptics based on
     * type value passed.
     * @param type - notification type.
     */
    notificationOccurred(type: NotificationHapticFeedbackType): void;
    /**
     * A method tells that the user has changed a selection. The Telegram app
     * may play the appropriate haptics.
     *
     * Do not use this feedback when the user makes or confirms a selection;
     * use it only when the selection changes.
     */
    selectionChanged(): void;
    /**
     * Returns true in case, specified method is supported by current component
     * including Web Apps platform version.
     */
    supports: SupportsFunc<'impactOccurred' | 'notificationOccurred' | 'selectionChanged'>;
}
