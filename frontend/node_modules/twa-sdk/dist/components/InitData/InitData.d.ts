import { Chat, InitData as TwaInitData, User } from 'twa-init-data';
/**
 * Class which is responsible for displaying Web Apps init data.
 */
export declare class InitData {
    private _authDate;
    private _hash;
    private readonly _canSendAfter;
    private readonly _chat;
    private readonly _queryId;
    private readonly _receiver;
    private readonly _startParam;
    private readonly _user;
    constructor(_authDate: Date, _hash: string, options?: Omit<TwaInitData, 'authDate' | 'hash'>);
    /**
     * Returns init data generation date.
     */
    get authDate(): Date;
    /**
     * Returns date after which a message can be sent via the answerWebAppQuery
     * method.
     * @see https://core.telegram.org/bots/api#answerwebappquery
     */
    get canSendAfter(): Date | null;
    /**
     * Returns an object containing data about the chat where the bot was
     * launched via the attachment menu. Returned for supergroups, channels and
     * group chats â€“ only for Web Apps launched via the attachment menu.
     */
    get chat(): Chat | null;
    /**
     * Returns a hash of all passed parameters, which the bot server can use to
     * check their validity.
     * @see https://core.telegram.org/bots/webapps#validating-data-received-via-the-web-app
     */
    get hash(): string;
    /**
     * Returns a unique identifier for the Web App session, required for sending
     * messages via the `answerWebAppQuery` method.
     * @see https://core.telegram.org/bots/api#answerwebappquery
     */
    get queryId(): string | null;
    /**
     * Returns an object containing data about the chat partner of the current
     * user in the chat where the bot was launched via the attachment menu.
     * Returned only for private chats and only for Web Apps launched
     * via the attachment menu.
     */
    get receiver(): User | null;
    /**
     * Returns the value of the `startattach` parameter, passed via link. Only
     * returned for Web Apps when launched from the attachment menu via link.
     */
    get startParam(): string | null;
    /**
     * Returns an object containing data about the current user.
     */
    get user(): User | null;
}
