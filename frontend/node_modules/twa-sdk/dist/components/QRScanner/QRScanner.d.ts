import { Version } from 'twa-core';
import { QRScannerEventsMap } from './events';
import { SupportsFunc } from '../../utils';
import { BridgeLike } from '../../types';
/**
 * Provides QR scanner functionality.
 */
export declare class QRScanner {
    private readonly bridge;
    private _isOpened;
    private readonly ee;
    constructor(bridge: BridgeLike, version: Version);
    /**
     * Closes scanner.
     */
    close(): void;
    set isOpened(value: boolean);
    /**
     * Returns true in case, QR scanner is currently opened.
     */
    get isOpened(): boolean;
    /**
     * Opens scanner with specified title shown to user. Method returns promise
     * with scanned QR content in case, it was scanned. It will contain null in
     * case, scanner was closed.
     * @param text - title to display.
     */
    open(text?: string): Promise<string | null>;
    on: <E extends "openChanged">(event: E, listener: import("twa-core").EventListener<QRScannerEventsMap[E]>) => void;
    off: <E extends "openChanged">(event: E, listener: import("twa-core").EventListener<QRScannerEventsMap[E]>) => void;
    /**
     * Returns true in case, specified method is supported by current component
     * including Web Apps platform version.
     */
    supports: SupportsFunc<'close' | 'open'>;
}
