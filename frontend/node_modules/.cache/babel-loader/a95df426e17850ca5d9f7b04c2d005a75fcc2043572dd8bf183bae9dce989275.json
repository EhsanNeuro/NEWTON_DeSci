{"ast":null,"code":"var _jsxFileName = \"B:\\\\NEWTON\\\\backend\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '@telegram-apps/telegram-ui/dist/styles.css';\nimport { AppRoot, List, Chip, Avatar, Image } from '@telegram-apps/telegram-ui';\nimport { MyTabbar } from './components/MyTabbar';\nimport NewtonLogo from '../src/images/apologonobg.png';\nimport LoadingPage from './components/LoadingPage';\nimport { retrieveLaunchParams } from '@telegram-apps/sdk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n  var _apiData$tokens;\n  const {\n    initDataRaw\n  } = retrieveLaunchParams();\n  const [error, setError] = useState(null);\n  const [user, setUser] = useState(null);\n  const [apiData, setApiData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [serverStatus, setServerStatus] = useState('checking');\n\n  // Server health check function\n  const checkServerHealth = async () => {\n    try {\n      const response = await fetch('http://37.27.29.15:3000/health', {\n        method: 'GET',\n        mode: 'cors',\n        // Changed from no-cors to cors\n        headers: {\n          'Accept': 'application/json'\n        }\n      });\n      if (response.ok) {\n        setServerStatus('online');\n        return true;\n      } else {\n        setServerStatus('offline');\n        return false;\n      }\n    } catch (err) {\n      setServerStatus('offline');\n      return false;\n    }\n  };\n  useEffect(() => {\n    const initializeApp = async () => {\n      try {\n        var _tg$initDataUnsafe;\n        // Initialize Telegram WebApp\n        const tg = window.Telegram.WebApp;\n        tg.ready();\n        const telegramUser = ((_tg$initDataUnsafe = tg.initDataUnsafe) === null || _tg$initDataUnsafe === void 0 ? void 0 : _tg$initDataUnsafe.user) || null;\n        setUser(telegramUser);\n\n        // Check server health first\n        const isServerHealthy = await checkServerHealth();\n        if (!isServerHealthy) {\n          throw new Error('Server is currently unavailable. Please try again later.');\n        }\n\n        // Prepare headers\n        const headers = new Headers({\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${initDataRaw}`,\n          'Accept': 'application/json'\n        });\n\n        // Authentication request\n        const authResponse = await fetch('http://37.27.29.15:3000/auth/login', {\n          method: 'POST',\n          headers: headers,\n          body: JSON.stringify({\n            initData: initDataRaw,\n            referralToken: \"\"\n          })\n        });\n        if (!authResponse.ok) {\n          const errorText = await authResponse.text();\n          throw new Error(`Authentication failed: ${authResponse.status} - ${errorText}`);\n        }\n        const authData = await authResponse.json();\n\n        // User data request\n        const userResponse = await fetch('http://37.27.29.15:3000/user/me', {\n          method: 'GET',\n          headers: headers\n        });\n        if (!userResponse.ok) {\n          const errorText = await userResponse.text();\n          throw new Error(`Failed to fetch user data: ${userResponse.status} - ${errorText}`);\n        }\n        const userData = await userResponse.json();\n        setApiData(userData);\n        setLoading(false);\n      } catch (err) {\n        console.error('Application initialization failed:', err);\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    initializeApp();\n\n    // Set up periodic health checks\n    const healthCheckInterval = setInterval(checkServerHealth, 30000);\n    return () => clearInterval(healthCheckInterval);\n  }, [initDataRaw]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(AppRoot, {\n      children: [/*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 20,\n          textAlign: 'center'\n        },\n        children: [\"Connecting to server...\", /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 10,\n            fontSize: '0.9em',\n            color: 'var(--tgui--hint_color)'\n          },\n          children: [\"Server Status: \", serverStatus]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(AppRoot, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: 'var(--tgui--destructive_color)'\n          },\n          children: \"Connection Error:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Server Status: \", serverStatus]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.reload(),\n          style: {\n            padding: '8px 16px',\n            margin: '10px 0',\n            backgroundColor: 'var(--tgui--button_color)',\n            color: 'var(--tgui--button_text_color)',\n            border: 'none',\n            borderRadius: '8px',\n            cursor: 'pointer'\n          },\n          children: \"Retry Connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n          children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n            children: \"Technical Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              whiteSpace: 'pre-wrap',\n              wordBreak: 'break-all',\n              backgroundColor: 'var(--tgui--secondary_bg_color)',\n              padding: 10,\n              borderRadius: 8\n            },\n            children: [\"Init Data: \", initDataRaw]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AppRoot, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100vh',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        style: {\n          background: 'var(--tgui--secondary_bg_color)',\n          padding: 10,\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexShrink: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: 25,\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Chip, {\n            mode: \"elevated\",\n            before: /*#__PURE__*/_jsxDEV(Avatar, {\n              size: 20,\n              url: user === null || user === void 0 ? void 0 : user.photo_url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 43\n            }, this),\n            children: (user === null || user === void 0 ? void 0 : user.first_name) || 'Guest'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Image, {\n            size: 64,\n            src: NewtonLogo,\n            alt: \"App logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            mode: \"outline\",\n            before: /*#__PURE__*/_jsxDEV(Avatar, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 42\n            }, this),\n            children: (_apiData$tokens = apiData === null || apiData === void 0 ? void 0 : apiData.tokens) !== null && _apiData$tokens !== void 0 ? _apiData$tokens : 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MyTabbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"r3QUpfUzPlLErMXGsdzDRPzYs7A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AppRoot","List","Chip","Avatar","Image","MyTabbar","NewtonLogo","LoadingPage","retrieveLaunchParams","jsxDEV","_jsxDEV","App","_s","_apiData$tokens","initDataRaw","error","setError","user","setUser","apiData","setApiData","loading","setLoading","serverStatus","setServerStatus","checkServerHealth","response","fetch","method","mode","headers","ok","err","initializeApp","_tg$initDataUnsafe","tg","window","Telegram","WebApp","ready","telegramUser","initDataUnsafe","isServerHealthy","Error","Headers","authResponse","body","JSON","stringify","initData","referralToken","errorText","text","status","authData","json","userResponse","userData","console","message","healthCheckInterval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","textAlign","marginTop","fontSize","color","onClick","location","reload","margin","backgroundColor","border","borderRadius","cursor","whiteSpace","wordBreak","display","flexDirection","height","overflow","background","justifyContent","alignItems","flexShrink","gap","before","size","url","photo_url","first_name","src","alt","tokens","_c","$RefreshReg$"],"sources":["B:/NEWTON/backend/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '@telegram-apps/telegram-ui/dist/styles.css';\r\nimport { AppRoot, List, Chip, Avatar, Image } from '@telegram-apps/telegram-ui';\r\nimport { MyTabbar } from './components/MyTabbar';\r\nimport NewtonLogo from '../src/images/apologonobg.png';\r\nimport LoadingPage from './components/LoadingPage';\r\nimport { retrieveLaunchParams } from '@telegram-apps/sdk';\r\n\r\nexport const App = () => {\r\n  const { initDataRaw } = retrieveLaunchParams();\r\n  const [error, setError] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [apiData, setApiData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [serverStatus, setServerStatus] = useState('checking');\r\n\r\n  // Server health check function\r\n  const checkServerHealth = async () => {\r\n    try {\r\n      const response = await fetch('http://37.27.29.15:3000/health', {\r\n        method: 'GET',\r\n        mode: 'cors', // Changed from no-cors to cors\r\n        headers: {\r\n          'Accept': 'application/json'\r\n        }\r\n      });\r\n      \r\n      if (response.ok) {\r\n        setServerStatus('online');\r\n        return true;\r\n      } else {\r\n        setServerStatus('offline');\r\n        return false;\r\n      }\r\n    } catch (err) {\r\n      setServerStatus('offline');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const initializeApp = async () => {\r\n      try {\r\n        // Initialize Telegram WebApp\r\n        const tg = window.Telegram.WebApp;\r\n        tg.ready();\r\n        const telegramUser = tg.initDataUnsafe?.user || null;\r\n        setUser(telegramUser);\r\n\r\n        // Check server health first\r\n        const isServerHealthy = await checkServerHealth();\r\n        if (!isServerHealthy) {\r\n          throw new Error('Server is currently unavailable. Please try again later.');\r\n        }\r\n\r\n        // Prepare headers\r\n        const headers = new Headers({\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${initDataRaw}`,\r\n          'Accept': 'application/json'\r\n        });\r\n\r\n        // Authentication request\r\n        const authResponse = await fetch('http://37.27.29.15:3000/auth/login', {\r\n          method: 'POST',\r\n          headers: headers,\r\n          body: JSON.stringify({\r\n            initData: initDataRaw,\r\n            referralToken: \"\"\r\n          })\r\n        });\r\n\r\n        if (!authResponse.ok) {\r\n          const errorText = await authResponse.text();\r\n          throw new Error(`Authentication failed: ${authResponse.status} - ${errorText}`);\r\n        }\r\n\r\n        const authData = await authResponse.json();\r\n        \r\n        // User data request\r\n        const userResponse = await fetch('http://37.27.29.15:3000/user/me', {\r\n          method: 'GET',\r\n          headers: headers\r\n        });\r\n\r\n        if (!userResponse.ok) {\r\n          const errorText = await userResponse.text();\r\n          throw new Error(`Failed to fetch user data: ${userResponse.status} - ${errorText}`);\r\n        }\r\n\r\n        const userData = await userResponse.json();\r\n        setApiData(userData);\r\n        setLoading(false);\r\n\r\n      } catch (err) {\r\n        console.error('Application initialization failed:', err);\r\n        setError(err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    initializeApp();\r\n    \r\n    // Set up periodic health checks\r\n    const healthCheckInterval = setInterval(checkServerHealth, 30000);\r\n    return () => clearInterval(healthCheckInterval);\r\n  }, [initDataRaw]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <AppRoot>\r\n        <LoadingPage />\r\n        <div style={{ padding: 20, textAlign: 'center' }}>\r\n          Connecting to server...\r\n          <div style={{ marginTop: 10, fontSize: '0.9em', color: 'var(--tgui--hint_color)' }}>\r\n            Server Status: {serverStatus}\r\n          </div>\r\n        </div>\r\n      </AppRoot>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <AppRoot>\r\n        <div style={{ padding: 20 }}>\r\n          <h3 style={{ color: 'var(--tgui--destructive_color)' }}>Connection Error:</h3>\r\n          <p>{error}</p>\r\n          <p>Server Status: {serverStatus}</p>\r\n          <button \r\n            onClick={() => window.location.reload()}\r\n            style={{\r\n              padding: '8px 16px',\r\n              margin: '10px 0',\r\n              backgroundColor: 'var(--tgui--button_color)',\r\n              color: 'var(--tgui--button_text_color)',\r\n              border: 'none',\r\n              borderRadius: '8px',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            Retry Connection\r\n          </button>\r\n          <details>\r\n            <summary>Technical Details</summary>\r\n            <pre style={{ \r\n              whiteSpace: 'pre-wrap', \r\n              wordBreak: 'break-all',\r\n              backgroundColor: 'var(--tgui--secondary_bg_color)',\r\n              padding: 10,\r\n              borderRadius: 8\r\n            }}>\r\n              Init Data: {initDataRaw}\r\n            </pre>\r\n          </details>\r\n        </div>\r\n      </AppRoot>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AppRoot>\r\n      <div style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n      }}>\r\n        <List style={{\r\n          background: 'var(--tgui--secondary_bg_color)',\r\n          padding: 10,\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          flexShrink: 0,\r\n        }}>\r\n          <div style={{\r\n            display: 'flex',\r\n            gap: 25,\r\n            alignItems: 'center',\r\n          }}>\r\n            <Chip mode=\"elevated\" before={<Avatar size={20} url={user?.photo_url} />}>\r\n              {user?.first_name || 'Guest'}\r\n            </Chip>\r\n            <Image\r\n              size={64}\r\n              src={NewtonLogo}\r\n              alt=\"App logo\"\r\n            />\r\n            <Chip mode=\"outline\" before={<Avatar size={20} />}>\r\n              {apiData?.tokens ?? 0}\r\n            </Chip>\r\n          </div>\r\n        </List>\r\n\r\n        <MyTabbar />\r\n      </div>\r\n    </AppRoot>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}