{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ehsan\\\\newton-beta\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Import the necessary styles globally\nimport '@telegram-apps/telegram-ui/dist/styles.css';\n\n// Import components from the library\nimport { AppRoot, Cell, Button, List, Section, Chip, Avatar, Image, CompactPagination, CompactPaginationItem } from '@telegram-apps/telegram-ui';\nimport { MyTabbar } from './components/MyTabbar';\nimport { useThemeParams } from \"@telegram-apps/sdk-react\";\nimport NewtonLogo from '../src/images/apologonobg.png';\nimport LoadingPage from './components/LoadingPage';\n\n// Example data for rendering list cells\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firstName = 'Ehsan';\nconst numOfTokens = 5000;\nexport const App = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetch(\"http://37.27.29.15:3000/user/me\") // Replace with your API endpoint\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json(); // Parse JSON from the response\n    }).then(data => {\n      setUserData(data); // Update state with API data\n    }).catch(error => {\n      console.error(\"There was a problem fetching the data:\", error);\n    });\n  }, []);\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        // Simulate loading\n        await new Promise(resolve => setTimeout(resolve, 2200));\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Loading failed', error);\n        setIsLoading(false);\n      }\n    };\n    loadData();\n  }, []); // Empty dependency array ensures this runs once on component mount\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(AppRoot, {\n      children: /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AppRoot, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100vh',\n        // Full viewport height\n        overflow: 'hidden' // Prevent overall scrolling\n      },\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        style: {\n          background: 'var(--tgui--secondary_bg_color)',\n          padding: 10,\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexShrink: 0 // Prevent shrinking\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: 25,\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Chip, {\n            mode: \"elevated\",\n            before: /*#__PURE__*/_jsxDEV(Avatar, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 43\n            }, this),\n            children: firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Image, {\n            size: 64,\n            src: NewtonLogo,\n            alt: \"User avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            mode: \"outline\",\n            before: /*#__PURE__*/_jsxDEV(Avatar, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 42\n            }, this),\n            children: numOfTokens\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MyTabbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"XhV/rO+z4XEHAHTv9ZqLWyeCgG0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","AppRoot","Cell","Button","List","Section","Chip","Avatar","Image","CompactPagination","CompactPaginationItem","MyTabbar","useThemeParams","NewtonLogo","LoadingPage","jsxDEV","_jsxDEV","firstName","numOfTokens","App","_s","isLoading","setIsLoading","users","setUsers","fetch","then","response","ok","Error","json","data","setUserData","catch","error","console","userData","children","fileName","_jsxFileName","lineNumber","columnNumber","loadData","Promise","resolve","setTimeout","style","display","flexDirection","height","overflow","background","padding","justifyContent","alignItems","flexShrink","gap","mode","before","size","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Ehsan/newton-beta/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n// Import the necessary styles globally\r\nimport '@telegram-apps/telegram-ui/dist/styles.css';\r\n\r\n// Import components from the library\r\nimport { AppRoot, Cell, Button, List, Section, Chip, Avatar, Image, CompactPagination, CompactPaginationItem } from '@telegram-apps/telegram-ui';\r\nimport { MyTabbar } from './components/MyTabbar';\r\nimport { useThemeParams } from \"@telegram-apps/sdk-react\";\r\nimport NewtonLogo from '../src/images/apologonobg.png'\r\nimport LoadingPage from './components/LoadingPage';\r\n\r\n// Example data for rendering list cells\r\nconst firstName = 'Ehsan';\r\nconst numOfTokens = 5000;\r\n\r\nexport const App = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://37.27.29.15:3000/user/me\") // Replace with your API endpoint\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n        return response.json(); // Parse JSON from the response\r\n      })\r\n      .then((data) => {\r\n        setUserData(data); // Update state with API data\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was a problem fetching the data:\", error);\r\n      });\r\n  }, []);\r\n\r\n  if (!userData) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        // Simulate loading\r\n        await new Promise(resolve => setTimeout(resolve, 2200));\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error('Loading failed', error);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadData();\r\n  }, []); // Empty dependency array ensures this runs once on component mount\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <AppRoot>\r\n        <LoadingPage />\r\n      </AppRoot>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AppRoot>\r\n      <div style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100vh', // Full viewport height\r\n        overflow: 'hidden' // Prevent overall scrolling\r\n      }}>\r\n        {/* Fixed Header */}\r\n        <List style={{\r\n          background: 'var(--tgui--secondary_bg_color)',\r\n          padding: 10,\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          flexShrink: 0 // Prevent shrinking\r\n        }}>\r\n          <div style={{\r\n            display: 'flex',\r\n            gap: 25,\r\n            alignItems: 'center'\r\n          }}>\r\n            <Chip mode=\"elevated\" before={<Avatar size={20} />}>\r\n              {firstName}\r\n            </Chip>\r\n            <Image\r\n              size={64}\r\n              src={NewtonLogo}\r\n              alt=\"User avatar\"\r\n            />\r\n            <Chip mode=\"outline\" before={<Avatar size={20} />}>\r\n              {numOfTokens}\r\n            </Chip>\r\n          </div>\r\n        </List>\r\n        \r\n        <MyTabbar/>\r\n      </div>\r\n    </AppRoot>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}