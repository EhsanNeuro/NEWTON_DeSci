{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  hasRemoteMatch: null,\n  matchRemotePattern: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  hasRemoteMatch: function () {\n    return hasRemoteMatch;\n  },\n  matchRemotePattern: function () {\n    return matchRemotePattern;\n  }\n});\nconst _picomatch = require(\"next/dist/compiled/picomatch\");\nfunction matchRemotePattern(pattern, url) {\n  if (pattern.protocol !== undefined) {\n    const actualProto = url.protocol.slice(0, -1);\n    if (pattern.protocol !== actualProto) {\n      return false;\n    }\n  }\n  if (pattern.port !== undefined) {\n    if (pattern.port !== url.port) {\n      return false;\n    }\n  }\n  if (pattern.hostname === undefined) {\n    throw new Error(\"Pattern should define hostname but found\\n\" + JSON.stringify(pattern));\n  } else {\n    if (!(0, _picomatch.makeRe)(pattern.hostname).test(url.hostname)) {\n      return false;\n    }\n  }\n  if (pattern.search !== undefined) {\n    if (pattern.search !== url.search) {\n      return false;\n    }\n  }\n  var _pattern_pathname;\n  // Should be the same as writeImagesManifest()\n  if (!(0, _picomatch.makeRe)((_pattern_pathname = pattern.pathname) != null ? _pattern_pathname : '**', {\n    dot: true\n  }).test(url.pathname)) {\n    return false;\n  }\n  return true;\n}\nfunction hasRemoteMatch(domains, remotePatterns, url) {\n  return domains.some(domain => url.hostname === domain) || remotePatterns.some(p => matchRemotePattern(p, url));\n}","map":{"version":3,"names":["hasRemoteMatch","matchRemotePattern","pattern","url","protocol","undefined","actualProto","slice","port","hostname","Error","JSON","stringify","_picomatch","makeRe","test","search","_pattern_pathname","pathname","dot","domains","remotePatterns","some","domain","p"],"sources":["C:\\Users\\Ehsan\\node_modules\\next\\src\\shared\\lib\\match-remote-pattern.ts"],"sourcesContent":["import type { RemotePattern } from './image-config'\nimport { makeRe } from 'next/dist/compiled/picomatch'\n\n// Modifying this function should also modify writeImagesManifest()\nexport function matchRemotePattern(pattern: RemotePattern, url: URL): boolean {\n  if (pattern.protocol !== undefined) {\n    const actualProto = url.protocol.slice(0, -1)\n    if (pattern.protocol !== actualProto) {\n      return false\n    }\n  }\n  if (pattern.port !== undefined) {\n    if (pattern.port !== url.port) {\n      return false\n    }\n  }\n\n  if (pattern.hostname === undefined) {\n    throw new Error(\n      `Pattern should define hostname but found\\n${JSON.stringify(pattern)}`\n    )\n  } else {\n    if (!makeRe(pattern.hostname).test(url.hostname)) {\n      return false\n    }\n  }\n\n  if (pattern.search !== undefined) {\n    if (pattern.search !== url.search) {\n      return false\n    }\n  }\n\n  // Should be the same as writeImagesManifest()\n  if (!makeRe(pattern.pathname ?? '**', { dot: true }).test(url.pathname)) {\n    return false\n  }\n\n  return true\n}\n\nexport function hasRemoteMatch(\n  domains: string[],\n  remotePatterns: RemotePattern[],\n  url: URL\n): boolean {\n  return (\n    domains.some((domain) => url.hostname === domain) ||\n    remotePatterns.some((p) => matchRemotePattern(p, url))\n  )\n}\n"],"mappings":";;;;;;;;;;;;;;;;EAyCgBA,cAAc,WAAAA,CAAA;WAAdA,cAAA;;EArCAC,kBAAkB,WAAAA,CAAA;WAAlBA,kBAAA;;;2BAHO;AAGhB,SAASA,mBAAmBC,OAAsB,EAAEC,GAAQ;EACjE,IAAID,OAAA,CAAQE,QAAQ,KAAKC,SAAA,EAAW;IAClC,MAAMC,WAAA,GAAcH,GAAA,CAAIC,QAAQ,CAACG,KAAK,CAAC,GAAG,CAAC;IAC3C,IAAIL,OAAA,CAAQE,QAAQ,KAAKE,WAAA,EAAa;MACpC,OAAO;IACT;EACF;EACA,IAAIJ,OAAA,CAAQM,IAAI,KAAKH,SAAA,EAAW;IAC9B,IAAIH,OAAA,CAAQM,IAAI,KAAKL,GAAA,CAAIK,IAAI,EAAE;MAC7B,OAAO;IACT;EACF;EAEA,IAAIN,OAAA,CAAQO,QAAQ,KAAKJ,SAAA,EAAW;IAClC,MAAM,IAAIK,KAAA,CACR,4CAAC,GAA4CC,IAAA,CAAKC,SAAS,CAACV,OAAA;EAEhE,OAAO;IACL,IAAI,CAAC,IAAAW,UAAA,CAAAC,MAAM,EAACZ,OAAA,CAAQO,QAAQ,EAAEM,IAAI,CAACZ,GAAA,CAAIM,QAAQ,GAAG;MAChD,OAAO;IACT;EACF;EAEA,IAAIP,OAAA,CAAQc,MAAM,KAAKX,SAAA,EAAW;IAChC,IAAIH,OAAA,CAAQc,MAAM,KAAKb,GAAA,CAAIa,MAAM,EAAE;MACjC,OAAO;IACT;EACF;MAGYC,iBAAA;EADZ;EACA,IAAI,CAAC,IAAAJ,UAAA,CAAAC,MAAM,EAAC,CAAAG,iBAAA,GAAAf,OAAA,CAAQgB,QAAQ,YAAhBD,iBAAA,GAAoB,MAAM;IAAEE,GAAA,EAAK;EAAK,GAAGJ,IAAI,CAACZ,GAAA,CAAIe,QAAQ,GAAG;IACvE,OAAO;EACT;EAEA,OAAO;AACT;AAEO,SAASlB,eACdoB,OAAiB,EACjBC,cAA+B,EAC/BlB,GAAQ;EAER,OACEiB,OAAA,CAAQE,IAAI,CAAEC,MAAA,IAAWpB,GAAA,CAAIM,QAAQ,KAAKc,MAAA,KAC1CF,cAAA,CAAeC,IAAI,CAAEE,CAAA,IAAMvB,kBAAA,CAAmBuB,CAAA,EAAGrB,GAAA;AAErD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}