{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ehsan\\\\newton-beta\\\\src\\\\components\\\\TasksSection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TabsList, Image } from '@telegram-apps/telegram-ui';\nimport { MyInput } from './MyInput';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TasksSection = () => {\n  _s();\n  const [selectedTab, setSelectedTab] = useState('tab1');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TabsList, {\n      children: [/*#__PURE__*/_jsxDEV(TabsList.Item, {\n        selected: selectedTab === 'tab1',\n        onClick: () => setSelectedTab('tab1'),\n        children: \"Frens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabsList.Item, {\n        selected: selectedTab === 'tab2',\n        onClick: () => setSelectedTab('tab2'),\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), selectedTab === 'tab1' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: \"./src/images/Frens.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MyInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true), selectedTab === 'tab2' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tab 2 Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is the content for Tab 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(TasksSection, \"mn8KeV6V6w9sWUei0cmOmwdM7Qg=\");\n_c = TasksSection;\nexport default TasksSection;\nvar _c;\n$RefreshReg$(_c, \"TasksSection\");","map":{"version":3,"names":["React","useState","TabsList","Image","MyInput","jsxDEV","_jsxDEV","Fragment","_Fragment","TasksSection","_s","selectedTab","setSelectedTab","children","Item","selected","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","_c","$RefreshReg$"],"sources":["C:/Users/Ehsan/newton-beta/src/components/TasksSection.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TabsList ,Image} from '@telegram-apps/telegram-ui';\r\nimport { MyInput } from './MyInput';\r\n\r\nconst TasksSection = () => {\r\n  const [selectedTab, setSelectedTab] = useState('tab1');\r\n\r\n  return (\r\n    <div>\r\n      <TabsList>\r\n        <TabsList.Item\r\n          selected={selectedTab === 'tab1'}\r\n          onClick={() => setSelectedTab('tab1')}\r\n        >\r\n          Frens\r\n        </TabsList.Item>\r\n        <TabsList.Item\r\n          selected={selectedTab === 'tab2'}\r\n          onClick={() => setSelectedTab('tab2')}\r\n        >\r\n          Tasks\r\n        </TabsList.Item>\r\n\r\n      </TabsList>\r\n\r\n      {selectedTab === 'tab1' && (\r\n        <><Image src=\"./src/images/Frens.png\"></Image>\r\n<MyInput/></>\r\n      )}\r\n\r\n      {selectedTab === 'tab2' && (\r\n        <div>\r\n          <h2>Tab 2 Content</h2>\r\n          <p>This is the content for Tab 2</p>\r\n        </div>\r\n      )}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasksSection;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,EAAEC,KAAK,QAAO,4BAA4B;AAC3D,SAASC,OAAO,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,MAAM,CAAC;EAEtD,oBACEK,OAAA;IAAAO,QAAA,gBACEP,OAAA,CAACJ,QAAQ;MAAAW,QAAA,gBACPP,OAAA,CAACJ,QAAQ,CAACY,IAAI;QACZC,QAAQ,EAAEJ,WAAW,KAAK,MAAO;QACjCK,OAAO,EAAEA,CAAA,KAAMJ,cAAc,CAAC,MAAM,CAAE;QAAAC,QAAA,EACvC;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC,eAChBd,OAAA,CAACJ,QAAQ,CAACY,IAAI;QACZC,QAAQ,EAAEJ,WAAW,KAAK,MAAO;QACjCK,OAAO,EAAEA,CAAA,KAAMJ,cAAc,CAAC,MAAM,CAAE;QAAAC,QAAA,EACvC;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAER,CAAC,EAEVT,WAAW,KAAK,MAAM,iBACrBL,OAAA,CAAAE,SAAA;MAAAK,QAAA,gBAAEP,OAAA,CAACH,KAAK;QAACkB,GAAG,EAAC;MAAwB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtDd,OAAA,CAACF,OAAO;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA,eAAE,CACL,EAEAT,WAAW,KAAK,MAAM,iBACrBL,OAAA;MAAAO,QAAA,gBACEP,OAAA;QAAAO,QAAA,EAAI;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBd,OAAA;QAAAO,QAAA,EAAG;MAA6B;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEE,CAAC;AAEV,CAAC;AAACV,EAAA,CAnCID,YAAY;AAAAa,EAAA,GAAZb,YAAY;AAqClB,eAAeA,YAAY;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}