{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ehsan\\\\newton-beta\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '@telegram-apps/telegram-ui/dist/styles.css';\nimport { AppRoot, Cell, Button, List, Section, Chip, Avatar, Image } from '@telegram-apps/telegram-ui';\nimport { MyTabbar } from './components/MyTabbar';\nimport NewtonLogo from '../src/images/apologonobg.png';\nimport LoadingPage from './components/LoadingPage';\nimport { retrieveLaunchParams } from '@telegram-apps/sdk';\n\n// Base API URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n  const [user, setUser] = useState(null); // Telegram user data\n  const [userdata, setUserdata] = useState(null); // User token balance\n  const [loading, setLoading] = useState(true); // Loading state\n  const API_BASE_URL = 'http://37.27.29.15:3000';\n  const {\n    initDataRaw\n  } = retrieveLaunchParams();\n  console.log('hello');\n  fetch('http://37.27.29.15:3000/auth/login', {\n    method: 'POST',\n    headers: {\n      'Authorization': `tma ${initDataRaw}`,\n      'Content-Type': 'application/json' // Set the content type\n    },\n    body: JSON.stringify({\n      access_token: \"string\",\n      // Replace with the actual token\n      expirationTime: \"string\" // Replace with the actual expiration time\n    })\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    return response.json();\n  }).then(data => console.log('Response:', data)).catch(error => console.error('Error:', error));\n  useEffect(() => {\n    var _tg$initDataUnsafe;\n    const tg = window.Telegram.WebApp;\n\n    // Initialize Telegram WebApp\n    tg.ready();\n\n    // Fetch and set user data\n    const telegramUser = ((_tg$initDataUnsafe = tg.initDataUnsafe) === null || _tg$initDataUnsafe === void 0 ? void 0 : _tg$initDataUnsafe.user) || null;\n    setUser(telegramUser);\n\n    // Fetch user token balance from backend\n    const fetchTokens = async () => {\n      try {\n        const response = await axios.post(`${API_BASE_URL}user/me`, {\n          userId: telegramUser === null || telegramUser === void 0 ? void 0 : telegramUser.id\n        });\n        setUserdata(response.data.tokens || 0);\n      } catch (error) {\n        console.error('Error fetching tokens:', error);\n      } finally {\n        setLoading(false); // Stop loading spinner\n      }\n    };\n    if (telegramUser) {\n      fetchTokens();\n    } else {\n      setLoading(false); // No user data, stop loading\n    }\n\n    // Set theme colors dynamically\n    const {\n      secondary_bg_color\n    } = tg.themeParams || {};\n    if (secondary_bg_color) {\n      document.body.style.backgroundColor = secondary_bg_color;\n    }\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(AppRoot, {\n      children: /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AppRoot, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100vh',\n        // Full viewport height\n        overflow: 'hidden' // Prevent overall scrolling\n      },\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        style: {\n          background: 'var(--tgui--secondary_bg_color)',\n          padding: 10,\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexShrink: 0 // Prevent shrinking\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: 25,\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Chip, {\n            mode: \"elevated\",\n            before: /*#__PURE__*/_jsxDEV(Avatar, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 55\n            }, this),\n            children: (user === null || user === void 0 ? void 0 : user.first_name) || 'Guest'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Image, {\n            size: 64,\n            src: NewtonLogo,\n            alt: \"App logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            mode: \"outline\",\n            before: /*#__PURE__*/_jsxDEV(Avatar, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 54\n            }, this),\n            children: userdata.data.tokens\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MyTabbar, {\n        response: userdata\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"uMUmqDOH+Wgh7cPBWSiwaPPssUs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","AppRoot","Cell","Button","List","Section","Chip","Avatar","Image","MyTabbar","NewtonLogo","LoadingPage","retrieveLaunchParams","jsxDEV","_jsxDEV","App","_s","user","setUser","userdata","setUserdata","loading","setLoading","API_BASE_URL","initDataRaw","console","log","fetch","method","headers","body","JSON","stringify","access_token","expirationTime","then","response","ok","Error","status","json","data","catch","error","_tg$initDataUnsafe","tg","window","Telegram","WebApp","ready","telegramUser","initDataUnsafe","fetchTokens","post","userId","id","tokens","secondary_bg_color","themeParams","document","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","height","overflow","background","padding","justifyContent","alignItems","flexShrink","gap","mode","before","size","first_name","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Ehsan/newton-beta/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '@telegram-apps/telegram-ui/dist/styles.css';\r\nimport { AppRoot, Cell, Button, List, Section, Chip, Avatar, Image } from '@telegram-apps/telegram-ui';\r\nimport { MyTabbar } from './components/MyTabbar';\r\nimport NewtonLogo from '../src/images/apologonobg.png';\r\nimport LoadingPage from './components/LoadingPage';\r\n\r\nimport { retrieveLaunchParams } from '@telegram-apps/sdk';\r\n\r\n// Base API URL\r\n\r\nexport const App = () => {\r\n    const [user, setUser] = useState(null); // Telegram user data\r\n    const [userdata, setUserdata] = useState(null); // User token balance\r\n    const [loading, setLoading] = useState(true); // Loading state\r\n    const API_BASE_URL = 'http://37.27.29.15:3000';\r\n\r\n\r\n    const { initDataRaw } = retrieveLaunchParams();\r\n    console.log('hello')\r\n    fetch('http://37.27.29.15:3000/auth/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `tma ${initDataRaw}`,\r\n        'Content-Type': 'application/json', // Set the content type\r\n      },\r\n      body: JSON.stringify({\r\n        access_token: \"string\", // Replace with the actual token\r\n        expirationTime: \"string\", // Replace with the actual expiration time\r\n      }),\r\n    })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => console.log('Response:', data))\r\n      .catch(error => console.error('Error:', error));\r\n    \r\n    useEffect(() => {\r\n        const tg = window.Telegram.WebApp;\r\n\r\n        // Initialize Telegram WebApp\r\n        tg.ready();\r\n\r\n        // Fetch and set user data\r\n        const telegramUser = tg.initDataUnsafe?.user || null;\r\n        setUser(telegramUser);\r\n\r\n        // Fetch user token balance from backend\r\n        const fetchTokens = async () => {\r\n            try {\r\n                const response = await axios.post(`${API_BASE_URL}user/me`, {\r\n                    userId: telegramUser?.id,\r\n                });\r\n                setUserdata(response.data.tokens || 0);\r\n            } catch (error) {\r\n                console.error('Error fetching tokens:', error);\r\n            } finally {\r\n                setLoading(false); // Stop loading spinner\r\n            }\r\n        };\r\n\r\n        if (telegramUser) {\r\n            fetchTokens();\r\n        } else {\r\n            setLoading(false); // No user data, stop loading\r\n        }\r\n\r\n        // Set theme colors dynamically\r\n        const { secondary_bg_color } = tg.themeParams || {};\r\n        if (secondary_bg_color) {\r\n            document.body.style.backgroundColor = secondary_bg_color;\r\n        }\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return  <AppRoot><LoadingPage /></AppRoot>;\r\n    }\r\n\r\n    return (\r\n        <AppRoot>\r\n            <div style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                height: '100vh', // Full viewport height\r\n                overflow: 'hidden', // Prevent overall scrolling\r\n            }}>\r\n                {/* Fixed Header */}\r\n                <List style={{\r\n                    background: 'var(--tgui--secondary_bg_color)',\r\n                    padding: 10,\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    flexShrink: 0, // Prevent shrinking\r\n                }}>\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        gap: 25,\r\n                        alignItems: 'center',\r\n                    }}>\r\n                        <Chip mode=\"elevated\" before={<Avatar size={20} />}>\r\n                            {user?.first_name || 'Guest'}\r\n                        </Chip>\r\n                        <Image\r\n                            size={64}\r\n                            src={NewtonLogo}\r\n                            alt=\"App logo\"\r\n                        />\r\n                        <Chip mode=\"outline\" before={<Avatar size={20} />}>\r\n                            {userdata.data.tokens}\r\n                        </Chip>\r\n                    </div>\r\n                </List>\r\n\r\n                {/* Tabbar Navigation */}\r\n                <MyTabbar response={userdata} />\r\n            </div>\r\n        </AppRoot>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}