{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ehsan\\\\newton-beta\\\\src\\\\components\\\\MyTabbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tabbar } from '@telegram-apps/telegram-ui';\n\n// Define your tabs with their respective icons and text\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tabs = [{\n  id: 'tab1',\n  text: 'Tab 1',\n  Icon: () => /*#__PURE__*/_jsxDEV(\"span\", {\n    children: \"game_28\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 44\n  }, this)\n}, {\n  id: 'tab2',\n  text: 'Tab 2',\n  Icon: () => /*#__PURE__*/_jsxDEV(\"span\", {\n    children: \"Icon2\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 44\n  }, this)\n}, {\n  id: 'tab3',\n  text: 'Tab 3',\n  Icon: () => /*#__PURE__*/_jsxDEV(\"span\", {\n    children: \"Icon3\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 44\n  }, this)\n}];\nexport const MyTabbar = () => {\n  _s();\n  const [currentTab, setCurrentTab] = useState(tabs[0].id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 100\n    },\n    children: /*#__PURE__*/_jsxDEV(Tabbar, {\n      children: tabs.map(({\n        id,\n        text,\n        Icon\n      }) => /*#__PURE__*/_jsxDEV(Tabbar.Item, {\n        text: text,\n        selected: id === currentTab,\n        onClick: () => setCurrentTab(id),\n        children: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(MyTabbar, \"K2w9xni00svj73bkMh0jlhN9ZEo=\");\n_c = MyTabbar;\nexport default MyTabbar;\nvar _c;\n$RefreshReg$(_c, \"MyTabbar\");","map":{"version":3,"names":["React","useState","Tabbar","jsxDEV","_jsxDEV","tabs","id","text","Icon","children","fileName","_jsxFileName","lineNumber","columnNumber","MyTabbar","_s","currentTab","setCurrentTab","style","height","map","Item","selected","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ehsan/newton-beta/src/components/MyTabbar.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Tabbar } from '@telegram-apps/telegram-ui';\r\n\r\n// Define your tabs with their respective icons and text\r\nconst tabs = [\r\n  { id: 'tab1', text: 'Tab 1', Icon: () => <span>game_28</span> },\r\n  { id: 'tab2', text: 'Tab 2', Icon: () => <span>Icon2</span> },\r\n  { id: 'tab3', text: 'Tab 3', Icon: () => <span>Icon3</span> }\r\n];\r\n\r\nexport const MyTabbar = () => {\r\n  const [currentTab, setCurrentTab] = useState(tabs[0].id);\r\n\r\n  return (\r\n    <div style={{ height: 100 }}>\r\n      <Tabbar>\r\n        {tabs.map(({ id, text, Icon }) => (\r\n          <Tabbar.Item \r\n            key={id} \r\n            text={text} \r\n            selected={id === currentTab} \r\n            onClick={() => setCurrentTab(id)}\r\n          >\r\n            <Icon />\r\n          </Tabbar.Item>\r\n        ))}\r\n      </Tabbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyTabbar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,4BAA4B;;AAEnD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,IAAI,GAAG,CACX;EAAEC,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,OAAO;EAAEC,IAAI,EAAEA,CAAA,kBAAMJ,OAAA;IAAAK,QAAA,EAAM;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM;AAAE,CAAC,EAC/D;EAAEP,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,OAAO;EAAEC,IAAI,EAAEA,CAAA,kBAAMJ,OAAA;IAAAK,QAAA,EAAM;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM;AAAE,CAAC,EAC7D;EAAEP,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,OAAO;EAAEC,IAAI,EAAEA,CAAA,kBAAMJ,OAAA;IAAAK,QAAA,EAAM;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM;AAAE,CAAC,CAC9D;AAED,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC,CAACC,EAAE,CAAC;EAExD,oBACEF,OAAA;IAAKc,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAE;IAAAV,QAAA,eAC1BL,OAAA,CAACF,MAAM;MAAAO,QAAA,EACJJ,IAAI,CAACe,GAAG,CAAC,CAAC;QAAEd,EAAE;QAAEC,IAAI;QAAEC;MAAK,CAAC,kBAC3BJ,OAAA,CAACF,MAAM,CAACmB,IAAI;QAEVd,IAAI,EAAEA,IAAK;QACXe,QAAQ,EAAEhB,EAAE,KAAKU,UAAW;QAC5BO,OAAO,EAAEA,CAAA,KAAMN,aAAa,CAACX,EAAE,CAAE;QAAAG,QAAA,eAEjCL,OAAA,CAACI,IAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GALHP,EAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMI,CACd;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACE,EAAA,CAnBWD,QAAQ;AAAAU,EAAA,GAARV,QAAQ;AAqBrB,eAAeA,QAAQ;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}