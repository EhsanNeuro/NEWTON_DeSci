{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ehsan\\\\newton-beta\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '@telegram-apps/telegram-ui/dist/styles.css';\nimport { AppRoot, List, Chip, Avatar, Image } from '@telegram-apps/telegram-ui';\nimport { MyTabbar } from './components/MyTabbar'; // Assuming you have this component\nimport NewtonLogo from '../src/images/apologonobg.png'; // Assuming your logo path is correct\nimport LoadingPage from './components/LoadingPage'; // Assuming you have this component\nimport { retrieveLaunchParams } from '@telegram-apps/sdk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n  const {\n    initDataRaw\n  } = retrieveLaunchParams();\n  // Base API URL\n\n  const [user, setUser] = useState(null); // Telegram user data\n  const [userData, setUserData] = useState(0); // User token balance\n  const [loading, setLoading] = useState(true); // Loading state\n\n  let loginResponse;\n  async function fetchLoginData() {\n    const response = await fetch('http://37.27.29.15:3000/auth/login', {\n      method: 'POST',\n      headers: {\n        'Authorization': `tma ${initDataRaw}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        initData: initDataRaw,\n        referralToken: \"string\"\n      })\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    loginResponse = await response.json(); // Assign parsed JSON to a variable\n    console.log('Login Response:', loginResponse);\n  }\n\n  // Call the function and access the data later\n  fetchLoginData().then(() => {\n    console.log('Accessing loginResponse:', loginResponse);\n    // Use loginResponse anywhere in your code now\n  });\n  useEffect(() => {\n    var _tg$initDataUnsafe;\n    const tg = window.Telegram.WebApp;\n\n    // Initialize Telegram WebApp\n    tg.ready();\n\n    // Fetch and set user data\n    const telegramUser = ((_tg$initDataUnsafe = tg.initDataUnsafe) === null || _tg$initDataUnsafe === void 0 ? void 0 : _tg$initDataUnsafe.user) || null;\n    setUser(telegramUser);\n\n    // Fetch user token balance from backend\n    const fetchUser = async () => {\n      try {\n        const response = await axios.get('http://37.27.29.15:3000/user/me/', {\n          userId: telegramUser === null || telegramUser === void 0 ? void 0 : telegramUser.id\n        });\n        setUserData(response);\n      } catch (error) {\n        console.error('Error fetching tokens:', error);\n      } finally {\n        setLoading(false); // Stop loading spinner\n      }\n    };\n    if (telegramUser) {\n      fetchUser();\n    } else {\n      setLoading(false); // No user data, stop loading\n    }\n\n    // Set theme colors dynamically\n    const {\n      secondary_bg_color\n    } = tg.themeParams || {};\n    if (secondary_bg_color) {\n      document.body.style.backgroundColor = secondary_bg_color;\n    }\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(AppRoot, {\n      children: /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AppRoot, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100vh',\n        // Full viewport height\n        overflow: 'hidden' // Prevent overall scrolling\n      },\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        style: {\n          background: 'var(--tgui--secondary_bg_color)',\n          padding: 10,\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexShrink: 0 // Prevent shrinking\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: 25,\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Chip, {\n            mode: \"elevated\",\n            before: /*#__PURE__*/_jsxDEV(Avatar, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 55\n            }, this),\n            children: (user === null || user === void 0 ? void 0 : user.first_name) || 'Guest'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Image, {\n            size: 64,\n            src: NewtonLogo,\n            alt: \"App logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            mode: \"outline\",\n            before: /*#__PURE__*/_jsxDEV(Avatar, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 54\n            }, this),\n            children: userData.tokens || 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MyTabbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"Zrh1dZfHxJoFNyR3ngcwqQzuZlA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","AppRoot","List","Chip","Avatar","Image","MyTabbar","NewtonLogo","LoadingPage","retrieveLaunchParams","jsxDEV","_jsxDEV","App","_s","initDataRaw","user","setUser","userData","setUserData","loading","setLoading","loginResponse","fetchLoginData","response","fetch","method","headers","body","JSON","stringify","initData","referralToken","ok","Error","status","json","console","log","then","_tg$initDataUnsafe","tg","window","Telegram","WebApp","ready","telegramUser","initDataUnsafe","fetchUser","get","userId","id","error","secondary_bg_color","themeParams","document","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","height","overflow","background","padding","justifyContent","alignItems","flexShrink","gap","mode","before","size","first_name","src","alt","tokens","_c","$RefreshReg$"],"sources":["C:/Users/Ehsan/newton-beta/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '@telegram-apps/telegram-ui/dist/styles.css';\r\nimport { AppRoot, List, Chip, Avatar, Image } from '@telegram-apps/telegram-ui';\r\nimport { MyTabbar } from './components/MyTabbar'; // Assuming you have this component\r\nimport NewtonLogo from '../src/images/apologonobg.png'; // Assuming your logo path is correct\r\nimport LoadingPage from './components/LoadingPage'; // Assuming you have this component\r\nimport { retrieveLaunchParams } from '@telegram-apps/sdk';\r\n\r\n\r\nexport const App = () => {\r\n  const { initDataRaw } = retrieveLaunchParams();\r\n// Base API URL\r\n\r\n    const [user, setUser] = useState(null); // Telegram user data\r\n    const [userData, setUserData] = useState(0); // User token balance\r\n    const [loading, setLoading] = useState(true); // Loading state\r\n\r\n    let loginResponse;\r\n\r\n    async function fetchLoginData() {\r\n      const response = await fetch('http://37.27.29.15:3000/auth/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `tma ${initDataRaw}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          initData: initDataRaw,\r\n          referralToken: \"string\",\r\n        }),\r\n      });\r\n    \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n    \r\n      loginResponse = await response.json(); // Assign parsed JSON to a variable\r\n      console.log('Login Response:', loginResponse);\r\n    }\r\n    \r\n    // Call the function and access the data later\r\n    fetchLoginData().then(() => {\r\n      console.log('Accessing loginResponse:', loginResponse);\r\n      // Use loginResponse anywhere in your code now\r\n    });\r\n    \r\n    \r\n    useEffect(() => {\r\n        const tg = window.Telegram.WebApp;\r\n\r\n        // Initialize Telegram WebApp\r\n        tg.ready();\r\n\r\n        // Fetch and set user data\r\n        const telegramUser = tg.initDataUnsafe?.user || null;\r\n        setUser(telegramUser);\r\n\r\n        // Fetch user token balance from backend\r\n        const fetchUser = async () => {\r\n            try {\r\n                const response = await axios.get('http://37.27.29.15:3000/user/me/', {\r\n                    userId: telegramUser?.id,\r\n                });\r\n                setUserData(response);\r\n            } catch (error) {\r\n                console.error('Error fetching tokens:', error);\r\n            } finally {\r\n                setLoading(false); // Stop loading spinner\r\n            }\r\n        };\r\n\r\n        if (telegramUser) {\r\n            fetchUser();\r\n        } else {\r\n            setLoading(false); // No user data, stop loading\r\n        }\r\n\r\n        // Set theme colors dynamically\r\n        const { secondary_bg_color } = tg.themeParams || {};\r\n        if (secondary_bg_color) {\r\n            document.body.style.backgroundColor = secondary_bg_color;\r\n        }\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <AppRoot><LoadingPage /></AppRoot> ;\r\n    }\r\n\r\n    return (\r\n        <AppRoot>\r\n            <div style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                height: '100vh', // Full viewport height\r\n                overflow: 'hidden', // Prevent overall scrolling\r\n            }}>\r\n                {/* Fixed Header */}\r\n                <List style={{\r\n                    background: 'var(--tgui--secondary_bg_color)',\r\n                    padding: 10,\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    flexShrink: 0, // Prevent shrinking\r\n                }}>\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        gap: 25,\r\n                        alignItems: 'center',\r\n                    }}>\r\n                        <Chip mode=\"elevated\" before={<Avatar size={20} />}>\r\n                            {user?.first_name || 'Guest'}\r\n                        </Chip>\r\n                        <Image\r\n                            size={64}\r\n                            src={NewtonLogo}\r\n                            alt=\"App logo\"\r\n                        />\r\n                        <Chip mode=\"outline\" before={<Avatar size={20} />}>\r\n                            {userData.tokens || 100}\r\n                        </Chip>\r\n                    </div>\r\n                </List>\r\n\r\n                {/* Tabbar Navigation */}\r\n                <MyTabbar />\r\n            </div>\r\n        </AppRoot>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}