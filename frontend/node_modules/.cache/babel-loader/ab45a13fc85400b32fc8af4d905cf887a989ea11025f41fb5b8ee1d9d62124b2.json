{"ast":null,"code":"\"use client\";\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Image\", {\n  enumerable: true,\n  get: function () {\n    return Image;\n  }\n});\nconst _interop_require_default = require(\"@swc/helpers/_/_interop_require_default\");\nconst _interop_require_wildcard = require(\"@swc/helpers/_/_interop_require_wildcard\");\nconst _jsxruntime = require(\"react/jsx-runtime\");\nconst _react = /*#__PURE__*/_interop_require_wildcard._(require(\"react\"));\nconst _reactdom = /*#__PURE__*/_interop_require_default._(require(\"react-dom\"));\nconst _head = /*#__PURE__*/_interop_require_default._(require(\"../shared/lib/head\"));\nconst _getimgprops = require(\"../shared/lib/get-img-props\");\nconst _imageconfig = require(\"../shared/lib/image-config\");\nconst _imageconfigcontextsharedruntime = require(\"../shared/lib/image-config-context.shared-runtime\");\nconst _warnonce = require(\"../shared/lib/utils/warn-once\");\nconst _routercontextsharedruntime = require(\"../shared/lib/router-context.shared-runtime\");\nconst _imageloader = /*#__PURE__*/_interop_require_default._(require(\"next/dist/shared/lib/image-loader\"));\nconst _usemergedref = require(\"./use-merged-ref\");\n// This is replaced by webpack define plugin\nconst configEnv = process.env.__NEXT_IMAGE_OPTS;\nif (typeof window === 'undefined') {\n  globalThis.__NEXT_IMAGE_IMPORTED = true;\n}\n// See https://stackoverflow.com/q/39777833/266535 for why we use this ref\n// handler instead of the img's onLoad attribute.\nfunction handleLoading(img, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized, sizesInput) {\n  const src = img == null ? void 0 : img.src;\n  if (!img || img['data-loaded-src'] === src) {\n    return;\n  }\n  img['data-loaded-src'] = src;\n  const p = 'decode' in img ? img.decode() : Promise.resolve();\n  p.catch(() => {}).then(() => {\n    if (!img.parentElement || !img.isConnected) {\n      // Exit early in case of race condition:\n      // - onload() is called\n      // - decode() is called but incomplete\n      // - unmount is called\n      // - decode() completes\n      return;\n    }\n    if (placeholder !== 'empty') {\n      setBlurComplete(true);\n    }\n    if (onLoadRef == null ? void 0 : onLoadRef.current) {\n      // Since we don't have the SyntheticEvent here,\n      // we must create one with the same shape.\n      // See https://reactjs.org/docs/events.html\n      const event = new Event('load');\n      Object.defineProperty(event, 'target', {\n        writable: false,\n        value: img\n      });\n      let prevented = false;\n      let stopped = false;\n      onLoadRef.current({\n        ...event,\n        nativeEvent: event,\n        currentTarget: img,\n        target: img,\n        isDefaultPrevented: () => prevented,\n        isPropagationStopped: () => stopped,\n        persist: () => {},\n        preventDefault: () => {\n          prevented = true;\n          event.preventDefault();\n        },\n        stopPropagation: () => {\n          stopped = true;\n          event.stopPropagation();\n        }\n      });\n    }\n    if (onLoadingCompleteRef == null ? void 0 : onLoadingCompleteRef.current) {\n      onLoadingCompleteRef.current(img);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const origSrc = new URL(src, 'http://n').searchParams.get('url') || src;\n      if (img.getAttribute('data-nimg') === 'fill') {\n        if (!unoptimized && (!sizesInput || sizesInput === '100vw')) {\n          let widthViewportRatio = img.getBoundingClientRect().width / window.innerWidth;\n          if (widthViewportRatio < 0.6) {\n            if (sizesInput === '100vw') {\n              (0, _warnonce.warnOnce)('Image with src \"' + origSrc + '\" has \"fill\" prop and \"sizes\" prop of \"100vw\", but image is not rendered at full viewport width. Please adjust \"sizes\" to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes');\n            } else {\n              (0, _warnonce.warnOnce)('Image with src \"' + origSrc + '\" has \"fill\" but is missing \"sizes\" prop. Please add it to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes');\n            }\n          }\n        }\n        if (img.parentElement) {\n          const {\n            position\n          } = window.getComputedStyle(img.parentElement);\n          const valid = ['absolute', 'fixed', 'relative'];\n          if (!valid.includes(position)) {\n            (0, _warnonce.warnOnce)('Image with src \"' + origSrc + '\" has \"fill\" and parent element with invalid \"position\". Provided \"' + position + '\" should be one of ' + valid.map(String).join(',') + \".\");\n          }\n        }\n        if (img.height === 0) {\n          (0, _warnonce.warnOnce)('Image with src \"' + origSrc + '\" has \"fill\" and a height value of 0. This is likely because the parent element of the image has not been styled to have a set height.');\n        }\n      }\n      const heightModified = img.height.toString() !== img.getAttribute('height');\n      const widthModified = img.width.toString() !== img.getAttribute('width');\n      if (heightModified && !widthModified || !heightModified && widthModified) {\n        (0, _warnonce.warnOnce)('Image with src \"' + origSrc + '\" has either width or height modified, but not the other. If you use CSS to change the size of your image, also include the styles \\'width: \"auto\"\\' or \\'height: \"auto\"\\' to maintain the aspect ratio.');\n      }\n    }\n  });\n}\nfunction getDynamicProps(fetchPriority) {\n  if (Boolean(_react.use)) {\n    // In React 19.0.0 or newer, we must use camelCase\n    // prop to avoid \"Warning: Invalid DOM property\".\n    // See https://github.com/facebook/react/pull/25927\n    return {\n      fetchPriority\n    };\n  }\n  // In React 18.2.0 or older, we must use lowercase prop\n  // to avoid \"Warning: Invalid DOM property\".\n  return {\n    fetchpriority: fetchPriority\n  };\n}\nconst ImageElement = /*#__PURE__*/(0, _react.forwardRef)((param, forwardedRef) => {\n  let {\n    src,\n    srcSet,\n    sizes,\n    height,\n    width,\n    decoding,\n    className,\n    style,\n    fetchPriority,\n    placeholder,\n    loading,\n    unoptimized,\n    fill,\n    onLoadRef,\n    onLoadingCompleteRef,\n    setBlurComplete,\n    setShowAltText,\n    sizesInput,\n    onLoad,\n    onError,\n    ...rest\n  } = param;\n  const ownRef = (0, _react.useCallback)(img => {\n    if (!img) {\n      return;\n    }\n    if (onError) {\n      // If the image has an error before react hydrates, then the error is lost.\n      // The workaround is to wait until the image is mounted which is after hydration,\n      // then we set the src again to trigger the error handler (if there was an error).\n      // eslint-disable-next-line no-self-assign\n      img.src = img.src;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!src) {\n        console.error('Image is missing required \"src\" property:', img);\n      }\n      if (img.getAttribute('alt') === null) {\n        console.error('Image is missing required \"alt\" property. Please add Alternative Text to describe the image for screen readers and search engines.');\n      }\n    }\n    if (img.complete) {\n      handleLoading(img, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized, sizesInput);\n    }\n  }, [src, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, onError, unoptimized, sizesInput]);\n  const ref = (0, _usemergedref.useMergedRef)(forwardedRef, ownRef);\n  return /*#__PURE__*/(0, _jsxruntime.jsx)(\"img\", {\n    ...rest,\n    ...getDynamicProps(fetchPriority),\n    // It's intended to keep `loading` before `src` because React updates\n    // props in order which causes Safari/Firefox to not lazy load properly.\n    // See https://github.com/facebook/react/issues/25883\n    loading: loading,\n    width: width,\n    height: height,\n    decoding: decoding,\n    \"data-nimg\": fill ? 'fill' : '1',\n    className: className,\n    style: style,\n    // It's intended to keep `src` the last attribute because React updates\n    // attributes in order. If we keep `src` the first one, Safari will\n    // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n    // updated by React. That causes multiple unnecessary requests if `srcSet`\n    // and `sizes` are defined.\n    // This bug cannot be reproduced in Chrome or Firefox.\n    sizes: sizes,\n    srcSet: srcSet,\n    src: src,\n    ref: ref,\n    onLoad: event => {\n      const img = event.currentTarget;\n      handleLoading(img, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized, sizesInput);\n    },\n    onError: event => {\n      // if the real image fails to load, this will ensure \"alt\" is visible\n      setShowAltText(true);\n      if (placeholder !== 'empty') {\n        // If the real image fails to load, this will still remove the placeholder.\n        setBlurComplete(true);\n      }\n      if (onError) {\n        onError(event);\n      }\n    }\n  });\n});\nfunction ImagePreload(param) {\n  let {\n    isAppRouter,\n    imgAttributes\n  } = param;\n  const opts = {\n    as: 'image',\n    imageSrcSet: imgAttributes.srcSet,\n    imageSizes: imgAttributes.sizes,\n    crossOrigin: imgAttributes.crossOrigin,\n    referrerPolicy: imgAttributes.referrerPolicy,\n    ...getDynamicProps(imgAttributes.fetchPriority)\n  };\n  if (isAppRouter && _reactdom.default.preload) {\n    // See https://github.com/facebook/react/pull/26940\n    _reactdom.default.preload(imgAttributes.src,\n    // @ts-expect-error TODO: upgrade to `@types/react-dom@18.3.x`\n    opts);\n    return null;\n  }\n  return /*#__PURE__*/(0, _jsxruntime.jsx)(_head.default, {\n    children: /*#__PURE__*/(0, _jsxruntime.jsx)(\"link\", {\n      rel: \"preload\",\n      // Note how we omit the `href` attribute, as it would only be relevant\n      // for browsers that do not support `imagesrcset`, and in those cases\n      // it would cause the incorrect image to be preloaded.\n      //\n      // https://html.spec.whatwg.org/multipage/semantics.html#attr-link-imagesrcset\n      href: imgAttributes.srcSet ? undefined : imgAttributes.src,\n      ...opts\n    }, '__nimg-' + imgAttributes.src + imgAttributes.srcSet + imgAttributes.sizes)\n  });\n}\nconst Image = /*#__PURE__*/(0, _react.forwardRef)((props, forwardedRef) => {\n  const pagesRouter = (0, _react.useContext)(_routercontextsharedruntime.RouterContext);\n  // We're in the app directory if there is no pages router.\n  const isAppRouter = !pagesRouter;\n  const configContext = (0, _react.useContext)(_imageconfigcontextsharedruntime.ImageConfigContext);\n  const config = (0, _react.useMemo)(() => {\n    const c = configEnv || configContext || _imageconfig.imageConfigDefault;\n    const allSizes = [...c.deviceSizes, ...c.imageSizes].sort((a, b) => a - b);\n    const deviceSizes = c.deviceSizes.sort((a, b) => a - b);\n    return {\n      ...c,\n      allSizes,\n      deviceSizes\n    };\n  }, [configContext]);\n  const {\n    onLoad,\n    onLoadingComplete\n  } = props;\n  const onLoadRef = (0, _react.useRef)(onLoad);\n  (0, _react.useEffect)(() => {\n    onLoadRef.current = onLoad;\n  }, [onLoad]);\n  const onLoadingCompleteRef = (0, _react.useRef)(onLoadingComplete);\n  (0, _react.useEffect)(() => {\n    onLoadingCompleteRef.current = onLoadingComplete;\n  }, [onLoadingComplete]);\n  const [blurComplete, setBlurComplete] = (0, _react.useState)(false);\n  const [showAltText, setShowAltText] = (0, _react.useState)(false);\n  const {\n    props: imgAttributes,\n    meta: imgMeta\n  } = (0, _getimgprops.getImgProps)(props, {\n    defaultLoader: _imageloader.default,\n    imgConf: config,\n    blurComplete,\n    showAltText\n  });\n  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {\n    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(ImageElement, {\n      ...imgAttributes,\n      unoptimized: imgMeta.unoptimized,\n      placeholder: imgMeta.placeholder,\n      fill: imgMeta.fill,\n      onLoadRef: onLoadRef,\n      onLoadingCompleteRef: onLoadingCompleteRef,\n      setBlurComplete: setBlurComplete,\n      setShowAltText: setShowAltText,\n      sizesInput: props.sizes,\n      ref: forwardedRef\n    }), imgMeta.priority ? /*#__PURE__*/(0, _jsxruntime.jsx)(ImagePreload, {\n      isAppRouter: isAppRouter,\n      imgAttributes: imgAttributes\n    }) : null]\n  });\n});\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}","map":{"version":3,"names":["_","require","_interop_require_default","_usemergedref","configEnv","process","env","__NEXT_IMAGE_OPTS","window","globalThis","__NEXT_IMAGE_IMPORTED","handleLoading","img","placeholder","onLoadRef","onLoadingCompleteRef","setBlurComplete","unoptimized","sizesInput","src","p","decode","Promise","resolve","then","parentElement","isConnected","current","event","Event","defineProperty","writable","value","prevented","stopped","nativeEvent","currentTarget","target","isDefaultPrevented","isPropagationStopped","persist","preventDefault","stopPropagation","NODE_ENV","origSrc","URL","searchParams","get","getAttribute","widthViewportRatio","getBoundingClientRect","width","innerWidth","_warnonce","warnOnce","position","getComputedStyle","valid","includes","map","String","join","height","heightModified","toString","widthModified","getDynamicProps","fetchPriority","Boolean","_react","use","fetchpriority","forwardRef","param","forwardedRef","srcSet","sizes","decoding","className","style","loading","fill","setShowAltText","onLoad","onError","rest","ownRef","useCallback","console","error","complete","ref","useMergedRef","_jsxruntime","jsx","ImagePreload","isAppRouter","imgAttributes","opts","as","imageSrcSet","imageSizes","crossOrigin","referrerPolicy","_reactdom","default","preload","_head","rel","href","undefined","Image","props","pagesRouter","useContext","_routercontextsharedruntime","RouterContext","configContext","_imageconfigcontextsharedruntime","ImageConfigContext","config","useMemo","c","_imageconfig","imageConfigDefault","deviceSizes","sort","a","b","allSizes","onLoadingComplete","useRef","useEffect","blurComplete","useState","showAltText","meta","imgMeta","_getimgprops","getImgProps","defaultLoader","_imageloader","imgConf","ImageElement","priority"],"sources":["C:\\Users\\Ehsan\\node_modules\\next\\src\\client\\image-component.tsx"],"sourcesContent":["'use client'\n\nimport React, {\n  useRef,\n  useEffect,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n  forwardRef,\n  use,\n} from 'react'\nimport ReactDOM from 'react-dom'\nimport Head from '../shared/lib/head'\nimport { getImgProps } from '../shared/lib/get-img-props'\nimport type {\n  ImageProps,\n  ImgProps,\n  OnLoad,\n  OnLoadingComplete,\n  PlaceholderValue,\n} from '../shared/lib/get-img-props'\nimport type {\n  ImageConfigComplete,\n  ImageLoaderProps,\n} from '../shared/lib/image-config'\nimport { imageConfigDefault } from '../shared/lib/image-config'\nimport { ImageConfigContext } from '../shared/lib/image-config-context.shared-runtime'\nimport { warnOnce } from '../shared/lib/utils/warn-once'\nimport { RouterContext } from '../shared/lib/router-context.shared-runtime'\n\n// @ts-ignore - This is replaced by webpack alias\nimport defaultLoader from 'next/dist/shared/lib/image-loader'\nimport { useMergedRef } from './use-merged-ref'\n\n// This is replaced by webpack define plugin\nconst configEnv = process.env.__NEXT_IMAGE_OPTS as any as ImageConfigComplete\n\nif (typeof window === 'undefined') {\n  ;(globalThis as any).__NEXT_IMAGE_IMPORTED = true\n}\n\nexport type { ImageLoaderProps }\nexport type ImageLoader = (p: ImageLoaderProps) => string\n\ntype ImgElementWithDataProp = HTMLImageElement & {\n  'data-loaded-src': string | undefined\n}\n\ntype ImageElementProps = ImgProps & {\n  unoptimized: boolean\n  placeholder: PlaceholderValue\n  onLoadRef: React.MutableRefObject<OnLoad | undefined>\n  onLoadingCompleteRef: React.MutableRefObject<OnLoadingComplete | undefined>\n  setBlurComplete: (b: boolean) => void\n  setShowAltText: (b: boolean) => void\n  sizesInput: string | undefined\n}\n\n// See https://stackoverflow.com/q/39777833/266535 for why we use this ref\n// handler instead of the img's onLoad attribute.\nfunction handleLoading(\n  img: ImgElementWithDataProp,\n  placeholder: PlaceholderValue,\n  onLoadRef: React.MutableRefObject<OnLoad | undefined>,\n  onLoadingCompleteRef: React.MutableRefObject<OnLoadingComplete | undefined>,\n  setBlurComplete: (b: boolean) => void,\n  unoptimized: boolean,\n  sizesInput: string | undefined\n) {\n  const src = img?.src\n  if (!img || img['data-loaded-src'] === src) {\n    return\n  }\n  img['data-loaded-src'] = src\n  const p = 'decode' in img ? img.decode() : Promise.resolve()\n  p.catch(() => {}).then(() => {\n    if (!img.parentElement || !img.isConnected) {\n      // Exit early in case of race condition:\n      // - onload() is called\n      // - decode() is called but incomplete\n      // - unmount is called\n      // - decode() completes\n      return\n    }\n    if (placeholder !== 'empty') {\n      setBlurComplete(true)\n    }\n    if (onLoadRef?.current) {\n      // Since we don't have the SyntheticEvent here,\n      // we must create one with the same shape.\n      // See https://reactjs.org/docs/events.html\n      const event = new Event('load')\n      Object.defineProperty(event, 'target', { writable: false, value: img })\n      let prevented = false\n      let stopped = false\n      onLoadRef.current({\n        ...event,\n        nativeEvent: event,\n        currentTarget: img,\n        target: img,\n        isDefaultPrevented: () => prevented,\n        isPropagationStopped: () => stopped,\n        persist: () => {},\n        preventDefault: () => {\n          prevented = true\n          event.preventDefault()\n        },\n        stopPropagation: () => {\n          stopped = true\n          event.stopPropagation()\n        },\n      })\n    }\n    if (onLoadingCompleteRef?.current) {\n      onLoadingCompleteRef.current(img)\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const origSrc = new URL(src, 'http://n').searchParams.get('url') || src\n      if (img.getAttribute('data-nimg') === 'fill') {\n        if (!unoptimized && (!sizesInput || sizesInput === '100vw')) {\n          let widthViewportRatio =\n            img.getBoundingClientRect().width / window.innerWidth\n          if (widthViewportRatio < 0.6) {\n            if (sizesInput === '100vw') {\n              warnOnce(\n                `Image with src \"${origSrc}\" has \"fill\" prop and \"sizes\" prop of \"100vw\", but image is not rendered at full viewport width. Please adjust \"sizes\" to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes`\n              )\n            } else {\n              warnOnce(\n                `Image with src \"${origSrc}\" has \"fill\" but is missing \"sizes\" prop. Please add it to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes`\n              )\n            }\n          }\n        }\n        if (img.parentElement) {\n          const { position } = window.getComputedStyle(img.parentElement)\n          const valid = ['absolute', 'fixed', 'relative']\n          if (!valid.includes(position)) {\n            warnOnce(\n              `Image with src \"${origSrc}\" has \"fill\" and parent element with invalid \"position\". Provided \"${position}\" should be one of ${valid\n                .map(String)\n                .join(',')}.`\n            )\n          }\n        }\n        if (img.height === 0) {\n          warnOnce(\n            `Image with src \"${origSrc}\" has \"fill\" and a height value of 0. This is likely because the parent element of the image has not been styled to have a set height.`\n          )\n        }\n      }\n\n      const heightModified =\n        img.height.toString() !== img.getAttribute('height')\n      const widthModified = img.width.toString() !== img.getAttribute('width')\n      if (\n        (heightModified && !widthModified) ||\n        (!heightModified && widthModified)\n      ) {\n        warnOnce(\n          `Image with src \"${origSrc}\" has either width or height modified, but not the other. If you use CSS to change the size of your image, also include the styles 'width: \"auto\"' or 'height: \"auto\"' to maintain the aspect ratio.`\n        )\n      }\n    }\n  })\n}\n\nfunction getDynamicProps(\n  fetchPriority?: string\n): Record<string, string | undefined> {\n  if (Boolean(use)) {\n    // In React 19.0.0 or newer, we must use camelCase\n    // prop to avoid \"Warning: Invalid DOM property\".\n    // See https://github.com/facebook/react/pull/25927\n    return { fetchPriority }\n  }\n  // In React 18.2.0 or older, we must use lowercase prop\n  // to avoid \"Warning: Invalid DOM property\".\n  return { fetchpriority: fetchPriority }\n}\n\nconst ImageElement = forwardRef<HTMLImageElement | null, ImageElementProps>(\n  (\n    {\n      src,\n      srcSet,\n      sizes,\n      height,\n      width,\n      decoding,\n      className,\n      style,\n      fetchPriority,\n      placeholder,\n      loading,\n      unoptimized,\n      fill,\n      onLoadRef,\n      onLoadingCompleteRef,\n      setBlurComplete,\n      setShowAltText,\n      sizesInput,\n      onLoad,\n      onError,\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    const ownRef = useCallback(\n      (img: ImgElementWithDataProp | null) => {\n        if (!img) {\n          return\n        }\n        if (onError) {\n          // If the image has an error before react hydrates, then the error is lost.\n          // The workaround is to wait until the image is mounted which is after hydration,\n          // then we set the src again to trigger the error handler (if there was an error).\n          // eslint-disable-next-line no-self-assign\n          img.src = img.src\n        }\n        if (process.env.NODE_ENV !== 'production') {\n          if (!src) {\n            console.error(`Image is missing required \"src\" property:`, img)\n          }\n          if (img.getAttribute('alt') === null) {\n            console.error(\n              `Image is missing required \"alt\" property. Please add Alternative Text to describe the image for screen readers and search engines.`\n            )\n          }\n        }\n        if (img.complete) {\n          handleLoading(\n            img,\n            placeholder,\n            onLoadRef,\n            onLoadingCompleteRef,\n            setBlurComplete,\n            unoptimized,\n            sizesInput\n          )\n        }\n      },\n      [\n        src,\n        placeholder,\n        onLoadRef,\n        onLoadingCompleteRef,\n        setBlurComplete,\n        onError,\n        unoptimized,\n        sizesInput,\n      ]\n    )\n\n    const ref = useMergedRef(forwardedRef, ownRef)\n\n    return (\n      <img\n        {...rest}\n        {...getDynamicProps(fetchPriority)}\n        // It's intended to keep `loading` before `src` because React updates\n        // props in order which causes Safari/Firefox to not lazy load properly.\n        // See https://github.com/facebook/react/issues/25883\n        loading={loading}\n        width={width}\n        height={height}\n        decoding={decoding}\n        data-nimg={fill ? 'fill' : '1'}\n        className={className}\n        style={style}\n        // It's intended to keep `src` the last attribute because React updates\n        // attributes in order. If we keep `src` the first one, Safari will\n        // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n        // updated by React. That causes multiple unnecessary requests if `srcSet`\n        // and `sizes` are defined.\n        // This bug cannot be reproduced in Chrome or Firefox.\n        sizes={sizes}\n        srcSet={srcSet}\n        src={src}\n        ref={ref}\n        onLoad={(event) => {\n          const img = event.currentTarget as ImgElementWithDataProp\n          handleLoading(\n            img,\n            placeholder,\n            onLoadRef,\n            onLoadingCompleteRef,\n            setBlurComplete,\n            unoptimized,\n            sizesInput\n          )\n        }}\n        onError={(event) => {\n          // if the real image fails to load, this will ensure \"alt\" is visible\n          setShowAltText(true)\n          if (placeholder !== 'empty') {\n            // If the real image fails to load, this will still remove the placeholder.\n            setBlurComplete(true)\n          }\n          if (onError) {\n            onError(event)\n          }\n        }}\n      />\n    )\n  }\n)\n\nfunction ImagePreload({\n  isAppRouter,\n  imgAttributes,\n}: {\n  isAppRouter: boolean\n  imgAttributes: ImgProps\n}) {\n  const opts = {\n    as: 'image',\n    imageSrcSet: imgAttributes.srcSet,\n    imageSizes: imgAttributes.sizes,\n    crossOrigin: imgAttributes.crossOrigin,\n    referrerPolicy: imgAttributes.referrerPolicy,\n    ...getDynamicProps(imgAttributes.fetchPriority),\n  }\n\n  if (isAppRouter && ReactDOM.preload) {\n    // See https://github.com/facebook/react/pull/26940\n    ReactDOM.preload(\n      imgAttributes.src,\n      // @ts-expect-error TODO: upgrade to `@types/react-dom@18.3.x`\n      opts\n    )\n    return null\n  }\n\n  return (\n    <Head>\n      <link\n        key={\n          '__nimg-' +\n          imgAttributes.src +\n          imgAttributes.srcSet +\n          imgAttributes.sizes\n        }\n        rel=\"preload\"\n        // Note how we omit the `href` attribute, as it would only be relevant\n        // for browsers that do not support `imagesrcset`, and in those cases\n        // it would cause the incorrect image to be preloaded.\n        //\n        // https://html.spec.whatwg.org/multipage/semantics.html#attr-link-imagesrcset\n        href={imgAttributes.srcSet ? undefined : imgAttributes.src}\n        {...opts}\n      />\n    </Head>\n  )\n}\n\n/**\n * The `Image` component is used to optimize images.\n *\n * Read more: [Next.js docs: `Image`](https://nextjs.org/docs/app/api-reference/components/image)\n */\nexport const Image = forwardRef<HTMLImageElement | null, ImageProps>(\n  (props, forwardedRef) => {\n    const pagesRouter = useContext(RouterContext)\n    // We're in the app directory if there is no pages router.\n    const isAppRouter = !pagesRouter\n\n    const configContext = useContext(ImageConfigContext)\n    const config = useMemo(() => {\n      const c = configEnv || configContext || imageConfigDefault\n      const allSizes = [...c.deviceSizes, ...c.imageSizes].sort((a, b) => a - b)\n      const deviceSizes = c.deviceSizes.sort((a, b) => a - b)\n      return { ...c, allSizes, deviceSizes }\n    }, [configContext])\n\n    const { onLoad, onLoadingComplete } = props\n    const onLoadRef = useRef(onLoad)\n\n    useEffect(() => {\n      onLoadRef.current = onLoad\n    }, [onLoad])\n\n    const onLoadingCompleteRef = useRef(onLoadingComplete)\n\n    useEffect(() => {\n      onLoadingCompleteRef.current = onLoadingComplete\n    }, [onLoadingComplete])\n\n    const [blurComplete, setBlurComplete] = useState(false)\n    const [showAltText, setShowAltText] = useState(false)\n\n    const { props: imgAttributes, meta: imgMeta } = getImgProps(props, {\n      defaultLoader,\n      imgConf: config,\n      blurComplete,\n      showAltText,\n    })\n\n    return (\n      <>\n        {\n          <ImageElement\n            {...imgAttributes}\n            unoptimized={imgMeta.unoptimized}\n            placeholder={imgMeta.placeholder}\n            fill={imgMeta.fill}\n            onLoadRef={onLoadRef}\n            onLoadingCompleteRef={onLoadingCompleteRef}\n            setBlurComplete={setBlurComplete}\n            setShowAltText={setShowAltText}\n            sizesInput={props.sizes}\n            ref={forwardedRef}\n          />\n        }\n        {imgMeta.priority ? (\n          <ImagePreload\n            isAppRouter={isAppRouter}\n            imgAttributes={imgAttributes}\n          />\n        ) : null}\n      </>\n    )\n  }\n)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}