{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ehsan\\\\newton-beta\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// Import the necessary styles globally\nimport '@telegram-apps/telegram-ui/dist/styles.css';\n\n// Import components from the library\nimport { AppRoot, Cell, Button, List, Section, Chip, Avatar, Image, CompactPagination, CompactPaginationItem } from '@telegram-apps/telegram-ui';\nimport { MyTabbar } from './components/MyTabbar';\nimport { useThemeParams } from \"@telegram-apps/sdk-react\";\nimport NewtonLogo from '../src/images/apologonobg.png';\n\n// Example data for rendering list cells\nconst firstName = 'Ehsan';\nconst numOfTokens = 5000;\nimport React, { useState } from 'react';\nimport LoadingPage from './LoadingPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n\n  // When loading is complete, this will be triggered by LoadingPage\n  const handleLoadComplete = () => {\n    setIsLoading(false);\n  };\n  return isLoading ? /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AppRoot, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100vh',\n          // Full viewport height\n          overflow: 'hidden' // Prevent overall scrolling\n        },\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          style: {\n            background: 'var(--tgui--secondary_bg_color)',\n            padding: 10,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            flexShrink: 0 // Prevent shrinking\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: 25,\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Chip, {\n              mode: \"elevated\",\n              before: /*#__PURE__*/_jsxDEV(Avatar, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 41\n              }, this),\n              children: firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Image, {\n              size: 64,\n              src: NewtonLogo,\n              alt: \"User avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              mode: \"outline\",\n              before: /*#__PURE__*/_jsxDEV(Avatar, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 40\n              }, this),\n              children: numOfTokens\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(MyTabbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), \"    \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5S7VQ8+9ArWv2AFPIfnY+LwrHeg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["AppRoot","Cell","Button","List","Section","Chip","Avatar","Image","CompactPagination","CompactPaginationItem","MyTabbar","useThemeParams","NewtonLogo","firstName","numOfTokens","React","useState","LoadingPage","jsxDEV","_jsxDEV","App","_s","isLoading","setIsLoading","handleLoadComplete","fileName","_jsxFileName","lineNumber","columnNumber","children","style","display","flexDirection","height","overflow","background","padding","justifyContent","alignItems","flexShrink","gap","mode","before","size","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Ehsan/newton-beta/src/App.js"],"sourcesContent":["\n// Import the necessary styles globally\nimport '@telegram-apps/telegram-ui/dist/styles.css';\n\n// Import components from the library\nimport { AppRoot, Cell, Button, List, Section, Chip, Avatar, Image,CompactPagination,CompactPaginationItem } from '@telegram-apps/telegram-ui';\nimport { MyTabbar } from './components/MyTabbar';\nimport { useThemeParams } from \"@telegram-apps/sdk-react\";\nimport NewtonLogo from '../src/images/apologonobg.png'\n\n// Example data for rendering list cells\nconst firstName = 'Ehsan';\nconst numOfTokens = 5000;\n\nimport React, { useState } from 'react';\nimport LoadingPage from './LoadingPage';\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n\n  // When loading is complete, this will be triggered by LoadingPage\n  const handleLoadComplete = () => {\n    setIsLoading(false);\n  };\n\n  return isLoading ? (\n    <LoadingPage />\n  ) : (\n    <div>\n      {/* Your main application content goes here */}\n\n      <AppRoot>\n    <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh', // Full viewport height\n      overflow: 'hidden' // Prevent overall scrolling\n     }}>\n      {/* Fixed Header */}\n      <List style={{\n        background: 'var(--tgui--secondary_bg_color)',\n        padding: 10,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexShrink: 0 // Prevent shrinking\n      }}>\n        <div style={{\n          display: 'flex',\n          gap: 25,\n          alignItems: 'center'\n        }}>\n          <Chip mode=\"elevated\" before={<Avatar size={20} />}>\n            {firstName}\n          </Chip>\n          <Image\n            size={64}\n            src={NewtonLogo}\n            alt=\"User avatar\"\n          />\n          <Chip mode=\"outline\" before={<Avatar size={20} />}>\n            {numOfTokens}\n          </Chip>\n        </div>\n      </List>\n      \n            <MyTabbar/>\n\n\n\n\n\n      \n    </div>\n  </AppRoot>    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}