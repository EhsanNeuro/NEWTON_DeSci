{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ehsan\\\\newton-beta\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport LoadingPage from './components/LoadingPage';\n// Import the necessary styles globally\nimport '@telegram-apps/telegram-ui/dist/styles.css';\n\n// Import components from the library\nimport { AppRoot, Cell, Button, List, Section, Chip, Avatar, Image, CompactPagination, CompactPaginationItem } from '@telegram-apps/telegram-ui';\nimport { MyTabbar } from './components/MyTabbar';\nimport { useThemeParams } from \"@telegram-apps/sdk-react\";\nimport NewtonLogo from '../src/images/apologonobg.png';\n\n// Example data for rendering list cells\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firstName = 'Ehsan';\nconst numOfTokens = 5000;\nfunction App() {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Simulate data loading\n    const fetchData = async () => {\n      // Your data fetching logic here\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      setIsLoading(false);\n    };\n    fetchData();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(LoadingPage, {\n      message: \"Preparing your Telegram Mini App...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AppRoot, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100vh',\n        // Full viewport height\n        overflow: 'hidden' // Prevent overall scrolling\n      },\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        style: {\n          background: 'var(--tgui--secondary_bg_color)',\n          padding: 10,\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexShrink: 0 // Prevent shrinking\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: 25,\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Chip, {\n            mode: \"elevated\",\n            before: /*#__PURE__*/_jsxDEV(Avatar, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 41\n            }, this),\n            children: firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Image, {\n            size: 64,\n            src: NewtonLogo,\n            alt: \"User avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            mode: \"outline\",\n            before: /*#__PURE__*/_jsxDEV(Avatar, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 40\n            }, this),\n            children: numOfTokens\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MyTabbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Yt82d/dvZsn5nYh5sqDQjv+rJ38=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","LoadingPage","AppRoot","Cell","Button","List","Section","Chip","Avatar","Image","CompactPagination","CompactPaginationItem","MyTabbar","useThemeParams","NewtonLogo","jsxDEV","_jsxDEV","firstName","numOfTokens","App","_s","isLoading","setIsLoading","fetchData","Promise","resolve","setTimeout","message","fileName","_jsxFileName","lineNumber","columnNumber","children","style","display","flexDirection","height","overflow","background","padding","justifyContent","alignItems","flexShrink","gap","mode","before","size","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Ehsan/newton-beta/src/App.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport LoadingPage from './components/LoadingPage';\n// Import the necessary styles globally\nimport '@telegram-apps/telegram-ui/dist/styles.css';\n\n// Import components from the library\nimport { AppRoot, Cell, Button, List, Section, Chip, Avatar, Image,CompactPagination,CompactPaginationItem } from '@telegram-apps/telegram-ui';\nimport { MyTabbar } from './components/MyTabbar';\nimport { useThemeParams } from \"@telegram-apps/sdk-react\";\nimport NewtonLogo from '../src/images/apologonobg.png'\n\n// Example data for rendering list cells\nconst firstName = 'Ehsan';\nconst numOfTokens = 5000;\n\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Simulate data loading\n    const fetchData = async () => {\n      // Your data fetching logic here\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  if (isLoading) {\n    return <LoadingPage message=\"Preparing your Telegram Mini App...\" />;\n  }\n\n  return (\n    <AppRoot>\n    <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh', // Full viewport height\n      overflow: 'hidden' // Prevent overall scrolling\n     }}>\n      {/* Fixed Header */}\n      <List style={{\n        background: 'var(--tgui--secondary_bg_color)',\n        padding: 10,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexShrink: 0 // Prevent shrinking\n      }}>\n        <div style={{\n          display: 'flex',\n          gap: 25,\n          alignItems: 'center'\n        }}>\n          <Chip mode=\"elevated\" before={<Avatar size={20} />}>\n            {firstName}\n          </Chip>\n          <Image\n            size={64}\n            src={NewtonLogo}\n            alt=\"User avatar\"\n          />\n          <Chip mode=\"outline\" before={<Avatar size={20} />}>\n            {numOfTokens}\n          </Chip>\n        </div>\n      </List>\n      \n            <MyTabbar/>\n\n\n\n\n\n      \n    </div>\n  </AppRoot>  );\n}\n\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}