{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ehsan\\\\newton-beta\\\\src\\\\components\\\\MyTabbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tabbar } from '@telegram-apps/telegram-ui';\nimport { Home, User, Settings } from 'lucide-react';\n\n// Import your components\nimport { GameSection } from './GameSection/GameSection';\nimport FrensSection from './FrensSection/FrensSection';\nimport TasksSection from './TasksSection';\n\n// Another example component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LearnSection = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: \"Profile Content Here\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 3\n}, this);\n\n// Define your tabs with their respective icons, text, and components\n_c = LearnSection;\nconst tabs = [{\n  id: 'tab1',\n  text: 'Home',\n  Icon: Home,\n  Component: GameSection\n}, {\n  id: 'tab2',\n  text: 'Learn',\n  Icon: User,\n  Component: LearnSection\n}, {\n  id: 'tab3',\n  text: 'Frens',\n  Icon: Settings,\n  Component: FrensSection\n}, {\n  id: 'tab4',\n  text: 'Tasks',\n  Icon: Settings,\n  Component: TasksSection\n}];\nexport const MyTabbar = () => {\n  _s();\n  const [currentTab, setCurrentTab] = useState(tabs[0].id);\n\n  // Find the current component based on selected tab\n  const CurrentComponent = tabs.find(tab => tab.id === currentTab).Component;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Tabbar, {\n      style: {\n        height: 100,\n        flexShrink: 0,\n        position: 'fixed',\n        bottom: 0,\n        width: '100%',\n        backgroundColor: 'var(--tgui--secondary_bg_color)',\n        zIndex: 1000,\n        padding: 0\n      },\n      children: tabs.map(({\n        id,\n        text,\n        Icon\n      }) => /*#__PURE__*/_jsxDEV(Tabbar.Item, {\n        text: text,\n        selected: id === currentTab,\n        onClick: () => setCurrentTab(id),\n        children: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(MyTabbar, \"K2w9xni00svj73bkMh0jlhN9ZEo=\");\n_c2 = MyTabbar;\nexport default MyTabbar;\nvar _c, _c2;\n$RefreshReg$(_c, \"LearnSection\");\n$RefreshReg$(_c2, \"MyTabbar\");","map":{"version":3,"names":["React","useState","Tabbar","Home","User","Settings","GameSection","FrensSection","TasksSection","jsxDEV","_jsxDEV","LearnSection","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","tabs","id","text","Icon","Component","MyTabbar","_s","currentTab","setCurrentTab","CurrentComponent","find","tab","style","height","flexShrink","position","bottom","width","backgroundColor","zIndex","padding","map","Item","selected","onClick","_c2","$RefreshReg$"],"sources":["C:/Users/Ehsan/newton-beta/src/components/MyTabbar.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Tabbar } from '@telegram-apps/telegram-ui';\r\nimport { Home, User, Settings } from 'lucide-react';\r\n\r\n// Import your components\r\nimport { GameSection } from './GameSection/GameSection';\r\nimport FrensSection from './FrensSection/FrensSection';\r\nimport TasksSection from './TasksSection';\r\n\r\n\r\n// Another example component\r\nconst LearnSection = () => (\r\n  <div>Profile Content Here</div>\r\n);\r\n\r\n// Define your tabs with their respective icons, text, and components\r\nconst tabs = [\r\n  { id: 'tab1', text: 'Home', Icon: Home, Component: GameSection },\r\n  { id: 'tab2', text: 'Learn', Icon: User, Component: LearnSection },\r\n  { id: 'tab3', text: 'Frens', Icon: Settings, Component: FrensSection},\r\n  { id: 'tab4', text: 'Tasks', Icon: Settings, Component: TasksSection}];\r\n\r\nexport const MyTabbar = () => {\r\n  const [currentTab, setCurrentTab] = useState(tabs[0].id);\r\n\r\n  // Find the current component based on selected tab\r\n  const CurrentComponent = tabs.find(tab => tab.id === currentTab).Component;\r\n\r\n  return (\r\n\r\n    <div>\r\n      <Tabbar style={{ height: 100,       flexShrink: 0,   position: 'fixed',\r\n      bottom: 0,\r\n      width: '100%',\r\n      backgroundColor: 'var(--tgui--secondary_bg_color)',\r\n      zIndex: 1000 , padding:0}}>\r\n          {tabs.map(({ id, text, Icon }) => (\r\n            <Tabbar.Item \r\n            \r\n              key={id} \r\n              text={text} \r\n              selected={id === currentTab} \r\n              onClick={() => setCurrentTab(id)}\r\n            \r\n            >\r\n              <Icon />\r\n            </Tabbar.Item>\r\n          ))}\r\n        </Tabbar>\r\n      \r\n      {/* Render the current component */}\r\n      <CurrentComponent />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyTabbar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}