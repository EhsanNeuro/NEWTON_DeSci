{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ehsan\\\\newton-beta\\\\frontend\\\\src\\\\App.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '@telegram-apps/telegram-ui/dist/styles.css';\nimport { AppRoot, List, Chip, Avatar, Image } from '@telegram-apps/telegram-ui';\nimport { MyTabbar } from './components/MyTabbar'; // Assuming you have this component\nimport NewtonLogo from '../src/images/apologonobg.png'; // Assuming your logo path is correct\nimport LoadingPage from './components/LoadingPage'; // Assuming you have this component\nimport { retrieveLaunchParams } from '@telegram-apps/sdk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet apiData = null;\nexport const App = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    initDataRaw\n  } = retrieveLaunchParams();\n  // Base API URL\n\n  const [user, setUser] = useState(null); // Telegram user data\n  const [userData, setUserData] = useState(0); // User token balance\n  const [loading, setLoading] = useState(true); // Loading state\n\n  fetch('http://37.27.29.15:3000/auth/login', {\n    method: 'POST',\n    headers: {\n      'Authorization': `tma ${initDataRaw}`,\n      // Ensure initDataRaw contains the correct value\n      'Content-Type': 'application/json' // Required for JSON payloads\n    },\n    body: JSON.stringify({\n      initData: {\n        initDataRaw\n      },\n      // Replace with the actual initData value\n      referralToken: \"string\" // Replace with the actual referralToken value\n    })\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    return response.json();\n  }).then(data => console.log('Response:', data)).catch(error => console.error('Error:', error));\n  _s(useEffect(_s(() => {\n    var _tg$initDataUnsafe;\n    _s();\n    const tg = window.Telegram.WebApp;\n\n    // Initialize Telegram WebApp\n    tg.ready();\n\n    // Fetch and set user data\n    const telegramUser = ((_tg$initDataUnsafe = tg.initDataUnsafe) === null || _tg$initDataUnsafe === void 0 ? void 0 : _tg$initDataUnsafe.user) || null;\n    setUser(telegramUser);\n\n    // Fetch user token balance from backend\n    useEffect(() => {\n      // Get user data when the app starts\n      fetch('http://37.27.29.15:3000/user/me').then(response => response.json()).then(data => {\n        apiData = data; // Save to our global variable\n        setUser(data); // Save to React state\n      }).catch(err => {\n        setError('Could not get user data');\n        console.error('Error:', err);\n      });\n    }, []);\n    if (telegramUser) {\n      fetchUser();\n    } else {\n      setLoading(false); // No user data, stop loading\n    }\n\n    // Set theme colors dynamically\n    const {\n      secondary_bg_color\n    } = tg.themeParams || {};\n    if (secondary_bg_color) {\n      document.body.style.backgroundColor = secondary_bg_color;\n    }\n  }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"), []), \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(AppRoot, {\n      children: /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AppRoot, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100vh',\n        // Full viewport height\n        overflow: 'hidden' // Prevent overall scrolling\n      },\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        style: {\n          background: 'var(--tgui--secondary_bg_color)',\n          padding: 10,\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexShrink: 0 // Prevent shrinking\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: 25,\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Chip, {\n            mode: \"elevated\",\n            before: /*#__PURE__*/_jsxDEV(Avatar, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 55\n            }, this),\n            children: (user === null || user === void 0 ? void 0 : user.first_name) || 'Guest'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Image, {\n            size: 64,\n            src: NewtonLogo,\n            alt: \"App logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            mode: \"outline\",\n            before: /*#__PURE__*/_jsxDEV(Avatar, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 54\n            }, this),\n            children: apiData.tokens || 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MyTabbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s2(App, \"Zrh1dZfHxJoFNyR3ngcwqQzuZlA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","AppRoot","List","Chip","Avatar","Image","MyTabbar","NewtonLogo","LoadingPage","retrieveLaunchParams","jsxDEV","_jsxDEV","apiData","App","_s2","_s","$RefreshSig$","initDataRaw","user","setUser","userData","setUserData","loading","setLoading","fetch","method","headers","body","JSON","stringify","initData","referralToken","then","response","ok","Error","status","json","data","console","log","catch","error","_tg$initDataUnsafe","tg","window","Telegram","WebApp","ready","telegramUser","initDataUnsafe","err","setError","fetchUser","secondary_bg_color","themeParams","document","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","height","overflow","background","padding","justifyContent","alignItems","flexShrink","gap","mode","before","size","first_name","src","alt","tokens","_c","$RefreshReg$"],"sources":["C:/Users/Ehsan/newton-beta/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '@telegram-apps/telegram-ui/dist/styles.css';\r\nimport { AppRoot, List, Chip, Avatar, Image } from '@telegram-apps/telegram-ui';\r\nimport { MyTabbar } from './components/MyTabbar'; // Assuming you have this component\r\nimport NewtonLogo from '../src/images/apologonobg.png'; // Assuming your logo path is correct\r\nimport LoadingPage from './components/LoadingPage'; // Assuming you have this component\r\nimport { retrieveLaunchParams } from '@telegram-apps/sdk';\r\n\r\nlet apiData = null;\r\n\r\nexport const App = () => {\r\n  const { initDataRaw } = retrieveLaunchParams();\r\n// Base API URL\r\n\r\n    const [user, setUser] = useState(null); // Telegram user data\r\n    const [userData, setUserData] = useState(0); // User token balance\r\n    const [loading, setLoading] = useState(true); // Loading state\r\n\r\n    fetch('http://37.27.29.15:3000/auth/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `tma ${initDataRaw}`, // Ensure initDataRaw contains the correct value\r\n        'Content-Type': 'application/json', // Required for JSON payloads\r\n      },\r\n      body: JSON.stringify({\r\n        initData: {initDataRaw}, // Replace with the actual initData value\r\n        referralToken: \"string\", // Replace with the actual referralToken value\r\n      }),\r\n    })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => console.log('Response:', data))\r\n      .catch(error => console.error('Error:', error));\r\n    \r\n    useEffect(() => {\r\n        const tg = window.Telegram.WebApp;\r\n\r\n        // Initialize Telegram WebApp\r\n        tg.ready();\r\n\r\n        // Fetch and set user data\r\n        const telegramUser = tg.initDataUnsafe?.user || null;\r\n        setUser(telegramUser);\r\n\r\n        // Fetch user token balance from backend\r\n        useEffect(() => {\r\n          // Get user data when the app starts\r\n          fetch('http://37.27.29.15:3000/user/me')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n              apiData = data;  // Save to our global variable\r\n              setUser(data);    // Save to React state\r\n            })\r\n            .catch(err => {\r\n              setError('Could not get user data');\r\n              console.error('Error:', err);\r\n            });\r\n        }, []);\r\n\r\n\r\n        if (telegramUser) {\r\n            fetchUser();\r\n        } else {\r\n            setLoading(false); // No user data, stop loading\r\n        }\r\n\r\n        // Set theme colors dynamically\r\n        const { secondary_bg_color } = tg.themeParams || {};\r\n        if (secondary_bg_color) {\r\n            document.body.style.backgroundColor = secondary_bg_color;\r\n        }\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <AppRoot><LoadingPage /></AppRoot> ;\r\n    }\r\n\r\n    return (\r\n        <AppRoot>\r\n            <div style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                height: '100vh', // Full viewport height\r\n                overflow: 'hidden', // Prevent overall scrolling\r\n            }}>\r\n                {/* Fixed Header */}\r\n                <List style={{\r\n                    background: 'var(--tgui--secondary_bg_color)',\r\n                    padding: 10,\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    flexShrink: 0, // Prevent shrinking\r\n                }}>\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        gap: 25,\r\n                        alignItems: 'center',\r\n                    }}>\r\n                        <Chip mode=\"elevated\" before={<Avatar size={20} />}>\r\n                            {user?.first_name || 'Guest'}\r\n                        </Chip>\r\n                        <Image\r\n                            size={64}\r\n                            src={NewtonLogo}\r\n                            alt=\"App logo\"\r\n                        />\r\n                        <Chip mode=\"outline\" before={<Avatar size={20} />}>\r\n                            {apiData.tokens || 100}\r\n                        </Chip>\r\n                    </div>\r\n                </List>\r\n\r\n                {/* Tabbar Navigation */}\r\n                <MyTabbar />\r\n            </div>\r\n        </AppRoot>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}