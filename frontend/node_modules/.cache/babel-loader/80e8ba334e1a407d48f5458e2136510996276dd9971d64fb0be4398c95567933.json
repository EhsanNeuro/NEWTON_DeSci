{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ehsan\\\\newton-beta\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '@telegram-apps/telegram-ui/dist/styles.css';\nimport { AppRoot, List, Chip, Avatar, Image } from '@telegram-apps/telegram-ui';\nimport MyTabbar from './components/MyTabbar'; // مطمئن شوید که این کامپوننت وجود دارد و مسیر آن درست است\nimport NewtonLogo from '../src/images/apologonobg.png'; // مسیر لوگو را بررسی کنید\nimport LoadingPage from './components/LoadingPage'; // مطمئن شوید که این کامپوننت وجود دارد و مسیر آن درست است\nimport { retrieveLaunchParams } from '@telegram-apps/sdk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n  const {\n    initDataRaw\n  } = retrieveLaunchParams();\n  const [user, setUser] = useState(null); // اطلاعات کاربر تلگرام\n  const [userData, setUserData] = useState(null); // اطلاعات کاربر از بک‌اند\n  const [loading, setLoading] = useState(true); // حالت بارگذاری\n\n  useEffect(() => {\n    var _tg$initDataUnsafe;\n    const tg = window.Telegram.WebApp;\n\n    // آماده‌سازی وب‌اپ تلگرام\n    tg.ready();\n\n    // دریافت اطلاعات کاربر تلگرام\n    const telegramUser = ((_tg$initDataUnsafe = tg.initDataUnsafe) === null || _tg$initDataUnsafe === void 0 ? void 0 : _tg$initDataUnsafe.user) || null;\n    setUser(telegramUser);\n\n    // تابع احراز هویت و دریافت اطلاعات کاربر\n    const authenticateAndFetchUser = async () => {\n      try {\n        console.log('initDataRaw:', initDataRaw);\n\n        // درخواست به /auth/login برای دریافت access_token\n        const loginResponse = await fetch('http://37.27.29.15:3000/auth/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n            // در صورت نیاز، هدر Authorization را اضافه کنید\n            // 'Authorization': `tma ${initDataRaw}`,\n          },\n          body: JSON.stringify({\n            initData: initDataRaw,\n            referralToken: \"\" // در صورت وجود، مقدار واقعی را جایگزین کنید\n          })\n        });\n        console.log('Login response status:', loginResponse.status);\n        if (!loginResponse.ok) {\n          const errorText = await loginResponse.text();\n          throw new Error(`Login failed: ${loginResponse.status}, ${errorText}`);\n        }\n        const loginData = await loginResponse.json();\n        console.log('Login data:', loginData);\n        const accessToken = loginData.access_token;\n        if (!accessToken) {\n          throw new Error('No access_token received from login response');\n        }\n\n        // درخواست به /user/me برای دریافت اطلاعات کاربر\n        const userResponse = await fetch('http://37.27.29.15:3000/user/me', {\n          method: 'GET',\n          headers: {\n            // بسته به نیاز بک‌اند، از 'Bearer' یا 'tma' استفاده کنید\n            'Authorization': `tma ${accessToken}`\n          }\n        });\n        console.log('User response status:', userResponse.status);\n        if (!userResponse.ok) {\n          const errorText = await userResponse.text();\n          throw new Error(`Fetching user data failed: ${userResponse.status}, ${errorText}`);\n        }\n        const userData = await userResponse.json();\n        console.log('User data:', userData);\n        setUserData(userData);\n      } catch (error) {\n        console.error('Error:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    authenticateAndFetchUser();\n\n    // تنظیم رنگ‌های پوسته به صورت داینامیک\n    const {\n      secondary_bg_color\n    } = tg.themeParams || {};\n    if (secondary_bg_color) {\n      document.body.style.backgroundColor = secondary_bg_color;\n    }\n  }, [initDataRaw]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(AppRoot, {\n      children: /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AppRoot, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100vh',\n        // ارتفاع کامل ویوپورت\n        overflow: 'hidden' // جلوگیری از اسکرول کلی\n      },\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        style: {\n          background: 'var(--tgui--secondary_bg_color)',\n          padding: 10,\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexShrink: 0 // جلوگیری از کوچک شدن\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: 25,\n            alignItems: 'center',\n            backgroundColor: 'var(--tgui--primary_bg_color)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Chip, {\n            mode: \"elevated\",\n            before: /*#__PURE__*/_jsxDEV(Avatar, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 43\n            }, this),\n            children: (user === null || user === void 0 ? void 0 : user.first_name) || 'Guest'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Image, {\n            size: 64,\n            src: NewtonLogo,\n            alt: \"App logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            mode: \"outline\",\n            before: /*#__PURE__*/_jsxDEV(Avatar, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 42\n            }, this),\n            children: (userData === null || userData === void 0 ? void 0 : userData.tokens) || 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MyTabbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"4Lvrj5jq4weTYzI57B4yrS0C4B0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AppRoot","List","Chip","Avatar","Image","MyTabbar","NewtonLogo","LoadingPage","retrieveLaunchParams","jsxDEV","_jsxDEV","App","_s","initDataRaw","user","setUser","userData","setUserData","loading","setLoading","_tg$initDataUnsafe","tg","window","Telegram","WebApp","ready","telegramUser","initDataUnsafe","authenticateAndFetchUser","console","log","loginResponse","fetch","method","headers","body","JSON","stringify","initData","referralToken","status","ok","errorText","text","Error","loginData","json","accessToken","access_token","userResponse","error","secondary_bg_color","themeParams","document","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","height","overflow","background","padding","justifyContent","alignItems","flexShrink","gap","mode","before","size","first_name","src","alt","tokens","_c","$RefreshReg$"],"sources":["C:/Users/Ehsan/newton-beta/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '@telegram-apps/telegram-ui/dist/styles.css';\r\nimport { AppRoot, List, Chip, Avatar, Image } from '@telegram-apps/telegram-ui';\r\nimport MyTabbar from './components/MyTabbar'; // مطمئن شوید که این کامپوننت وجود دارد و مسیر آن درست است\r\nimport NewtonLogo from '../src/images/apologonobg.png'; // مسیر لوگو را بررسی کنید\r\nimport LoadingPage from './components/LoadingPage'; // مطمئن شوید که این کامپوننت وجود دارد و مسیر آن درست است\r\nimport { retrieveLaunchParams } from '@telegram-apps/sdk';\r\n\r\nexport const App = () => {\r\n  const { initDataRaw } = retrieveLaunchParams();\r\n\r\n  const [user, setUser] = useState(null); // اطلاعات کاربر تلگرام\r\n  const [userData, setUserData] = useState(null); // اطلاعات کاربر از بک‌اند\r\n  const [loading, setLoading] = useState(true); // حالت بارگذاری\r\n\r\n  useEffect(() => {\r\n    const tg = window.Telegram.WebApp;\r\n\r\n    // آماده‌سازی وب‌اپ تلگرام\r\n    tg.ready();\r\n\r\n    // دریافت اطلاعات کاربر تلگرام\r\n    const telegramUser = tg.initDataUnsafe?.user || null;\r\n    setUser(telegramUser);\r\n\r\n    // تابع احراز هویت و دریافت اطلاعات کاربر\r\n    const authenticateAndFetchUser = async () => {\r\n      try {\r\n        console.log('initDataRaw:', initDataRaw);\r\n\r\n        // درخواست به /auth/login برای دریافت access_token\r\n        const loginResponse = await fetch('http://37.27.29.15:3000/auth/login', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            // در صورت نیاز، هدر Authorization را اضافه کنید\r\n            // 'Authorization': `tma ${initDataRaw}`,\r\n          },\r\n          body: JSON.stringify({\r\n            initData: initDataRaw,\r\n            referralToken: \"\", // در صورت وجود، مقدار واقعی را جایگزین کنید\r\n          }),\r\n        });\r\n\r\n        console.log('Login response status:', loginResponse.status);\r\n\r\n        if (!loginResponse.ok) {\r\n          const errorText = await loginResponse.text();\r\n          throw new Error(`Login failed: ${loginResponse.status}, ${errorText}`);\r\n        }\r\n\r\n        const loginData = await loginResponse.json();\r\n        console.log('Login data:', loginData);\r\n\r\n        const accessToken = loginData.access_token;\r\n\r\n        if (!accessToken) {\r\n          throw new Error('No access_token received from login response');\r\n        }\r\n\r\n        // درخواست به /user/me برای دریافت اطلاعات کاربر\r\n        const userResponse = await fetch('http://37.27.29.15:3000/user/me', {\r\n          method: 'GET',\r\n          headers: {\r\n            // بسته به نیاز بک‌اند، از 'Bearer' یا 'tma' استفاده کنید\r\n            'Authorization': `tma ${accessToken}`,\r\n          },\r\n        });\r\n\r\n        console.log('User response status:', userResponse.status);\r\n\r\n        if (!userResponse.ok) {\r\n          const errorText = await userResponse.text();\r\n          throw new Error(`Fetching user data failed: ${userResponse.status}, ${errorText}`);\r\n        }\r\n\r\n        const userData = await userResponse.json();\r\n        console.log('User data:', userData);\r\n        setUserData(userData);\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    authenticateAndFetchUser();\r\n\r\n    // تنظیم رنگ‌های پوسته به صورت داینامیک\r\n    const { secondary_bg_color } = tg.themeParams || {};\r\n    if (secondary_bg_color) {\r\n      document.body.style.backgroundColor = secondary_bg_color;\r\n    }\r\n  }, [initDataRaw]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <AppRoot>\r\n        <LoadingPage />\r\n      </AppRoot>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AppRoot>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: '100vh', // ارتفاع کامل ویوپورت\r\n          overflow: 'hidden', // جلوگیری از اسکرول کلی\r\n        }}\r\n      >\r\n        {/* هدر ثابت */}\r\n        <List\r\n          style={{\r\n            background: 'var(--tgui--secondary_bg_color)',\r\n            padding: 10,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            flexShrink: 0, // جلوگیری از کوچک شدن\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              gap: 25,\r\n              alignItems: 'center',\r\n              backgroundColor: 'var(--tgui--primary_bg_color)',\r\n            }}\r\n          >\r\n            <Chip mode=\"elevated\" before={<Avatar size={20} />}>\r\n              {user?.first_name || 'Guest'}\r\n            </Chip>\r\n            <Image size={64} src={NewtonLogo} alt=\"App logo\" />\r\n            <Chip mode=\"outline\" before={<Avatar size={20} />}>\r\n              {userData?.tokens || 100}\r\n            </Chip>\r\n          </div>\r\n        </List>\r\n\r\n        {/* ناوبری تب‌بار */}\r\n        <MyTabbar />\r\n      </div>\r\n    </AppRoot>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}